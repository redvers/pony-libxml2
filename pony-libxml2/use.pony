use @xmlCheckVersion[None](anon0: I32)
use @xmlStrdup[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlStrndup[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCharStrndup[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCharStrdup[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlStrsub[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32, anon2: I32)
use @xmlStrchr[Pointer[U8]](anon0: Pointer[U8] tag, anon1: U8)
use @xmlStrstr[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrcasestr[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrcmp[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrncmp[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlStrcasecmp[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrncasecmp[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlStrEqual[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrQEqual[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlStrlen[I32](anon0: Pointer[U8] tag)
use @xmlStrcat[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlStrncat[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlStrncatNew[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlStrPrintf[I32](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag)
use @xmlStrVPrintf[I32](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlGetUTF8Char[I32](anon0: Pointer[U8] tag, anon1: Pointer[I32])
use @xmlCheckUTF8[I32](anon0: Pointer[U8] tag)
use @xmlUTF8Strsize[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlUTF8Strndup[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlUTF8Strpos[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlUTF8Strloc[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlUTF8Strsub[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32, anon2: I32)
use @xmlUTF8Strlen[I32](anon0: Pointer[U8] tag)
use @xmlUTF8Size[I32](anon0: Pointer[U8] tag)
use @xmlUTF8Charcmp[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlCleanupInputCallbacks[None]()
use @xmlPopInputCallbacks[I32]()
use @xmlRegisterDefaultInputCallbacks[None]()
use @xmlAllocParserInputBuffer[NullablePointer[Xmlparserinputbuffer]](anon0: I32)
use @xmlParserInputBufferCreateFilename[NullablePointer[Xmlparserinputbuffer]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlParserInputBufferCreateFile[NullablePointer[Xmlparserinputbuffer]](anon0: NullablePointer[IoFile], anon1: I32)
use @xmlParserInputBufferCreateFd[NullablePointer[Xmlparserinputbuffer]](anon0: I32, anon1: I32)
use @xmlParserInputBufferCreateMem[NullablePointer[Xmlparserinputbuffer]](anon0: Pointer[U8] tag, anon1: I32, anon2: I32)
use @xmlParserInputBufferCreateStatic[NullablePointer[Xmlparserinputbuffer]](anon0: Pointer[U8] tag, anon1: I32, anon2: I32)
// Not Implemented Yet: use @xmlParserInputBufferCreateIO[NullablePointer[Xmlparserinputbuffer]](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: I32)
use @xmlParserInputBufferRead[I32](anon0: NullablePointer[Xmlparserinputbuffer], anon1: I32)
use @xmlParserInputBufferGrow[I32](anon0: NullablePointer[Xmlparserinputbuffer], anon1: I32)
use @xmlParserInputBufferPush[I32](anon0: NullablePointer[Xmlparserinputbuffer], anon1: I32, anon2: Pointer[U8] tag)
use @xmlFreeParserInputBuffer[None](anon0: NullablePointer[Xmlparserinputbuffer])
use @xmlParserGetDirectory[Pointer[U8]](anon0: Pointer[U8] tag)
// Not Implemented Yet: use @xmlRegisterInputCallbacks[I32](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[FUNCTIONPOINTER])
use @__xmlParserInputBufferCreateFilename[NullablePointer[Xmlparserinputbuffer]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCleanupOutputCallbacks[None]()
use @xmlRegisterDefaultOutputCallbacks[None]()
use @xmlAllocOutputBuffer[NullablePointer[Xmloutputbuffer]](anon0: NullablePointer[Xmlcharencodinghandler])
use @xmlOutputBufferCreateFilename[NullablePointer[Xmloutputbuffer]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlcharencodinghandler], anon2: I32)
use @xmlOutputBufferCreateFile[NullablePointer[Xmloutputbuffer]](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlcharencodinghandler])
use @xmlOutputBufferCreateBuffer[NullablePointer[Xmloutputbuffer]](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlcharencodinghandler])
use @xmlOutputBufferCreateFd[NullablePointer[Xmloutputbuffer]](anon0: I32, anon1: NullablePointer[Xmlcharencodinghandler])
// Not Implemented Yet: use @xmlOutputBufferCreateIO[NullablePointer[Xmloutputbuffer]](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: NullablePointer[Xmlcharencodinghandler])
use @xmlOutputBufferGetContent[Pointer[U8]](anon0: NullablePointer[Xmloutputbuffer])
use @xmlOutputBufferGetSize[U64](anon0: NullablePointer[Xmloutputbuffer])
use @xmlOutputBufferWrite[I32](anon0: NullablePointer[Xmloutputbuffer], anon1: I32, anon2: Pointer[U8] tag)
use @xmlOutputBufferWriteString[I32](anon0: NullablePointer[Xmloutputbuffer], anon1: Pointer[U8] tag)
// Not Implemented Yet: use @xmlOutputBufferWriteEscape[I32](anon0: NullablePointer[Xmloutputbuffer], anon1: Pointer[U8] tag, anon2: Pointer[FUNCTIONPOINTER])
use @xmlOutputBufferFlush[I32](anon0: NullablePointer[Xmloutputbuffer])
use @xmlOutputBufferClose[I32](anon0: NullablePointer[Xmloutputbuffer])
// Not Implemented Yet: use @xmlRegisterOutputCallbacks[I32](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[FUNCTIONPOINTER])
use @__xmlOutputBufferCreateFilename[NullablePointer[Xmloutputbuffer]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlcharencodinghandler], anon2: I32)
use @xmlRegisterHTTPPostCallbacks[None]()
use @xmlCheckHTTPInput[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparserinput])
use @xmlNoNetExternalEntityLoader[NullablePointer[Xmlparserinput]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlparserctxt])
use @xmlNormalizeWindowsPath[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCheckFilename[I32](anon0: Pointer[U8] tag)
use @xmlFileMatch[I32](anon0: Pointer[U8] tag)
use @xmlFileOpen[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlFileRead[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlFileClose[I32](anon0: Pointer[U8])
use @xmlIOHTTPMatch[I32](anon0: Pointer[U8] tag)
use @xmlIOHTTPOpen[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlIOHTTPOpenW[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlIOHTTPRead[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlIOHTTPClose[I32](anon0: Pointer[U8])
use @xmlIOFTPMatch[I32](anon0: Pointer[U8] tag)
use @xmlIOFTPOpen[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlIOFTPRead[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlIOFTPClose[I32](anon0: Pointer[U8])
use @xmlBufContent[Pointer[U8]](anon0: NullablePointer[Xmlbuf])
use @xmlBufEnd[Pointer[U8]](anon0: NullablePointer[Xmlbuf])
use @xmlBufUse[U64](anon0: NullablePointer[Xmlbuf])
use @xmlBufShrink[U64](anon0: NullablePointer[Xmlbuf], anon1: U64)
use @xmlValidateNCName[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlValidateQName[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlValidateName[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlValidateNMToken[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlBuildQName[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlSplitQName2[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[Pointer[U8] tag])
use @xmlSplitQName3[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[I32])
use @xmlSetBufferAllocationScheme[None](anon0: I32)
use @xmlGetBufferAllocationScheme[I32]()
use @xmlBufferCreate[NullablePointer[Xmlbuffer]]()
use @xmlBufferCreateSize[NullablePointer[Xmlbuffer]](anon0: U64)
use @xmlBufferCreateStatic[NullablePointer[Xmlbuffer]](anon0: Pointer[U8], anon1: U64)
use @xmlBufferResize[I32](anon0: NullablePointer[Xmlbuffer], anon1: U32)
use @xmlBufferFree[None](anon0: NullablePointer[Xmlbuffer])
use @xmlBufferDump[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlbuffer])
use @xmlBufferAdd[I32](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag, anon2: I32)
use @xmlBufferAddHead[I32](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag, anon2: I32)
use @xmlBufferCat[I32](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag)
use @xmlBufferCCat[I32](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag)
use @xmlBufferShrink[I32](anon0: NullablePointer[Xmlbuffer], anon1: U32)
use @xmlBufferGrow[I32](anon0: NullablePointer[Xmlbuffer], anon1: U32)
use @xmlBufferEmpty[None](anon0: NullablePointer[Xmlbuffer])
use @xmlBufferContent[Pointer[U8]](anon0: NullablePointer[Xmlbuffer])
use @xmlBufferDetach[Pointer[U8]](anon0: NullablePointer[Xmlbuffer])
use @xmlBufferSetAllocationScheme[None](anon0: NullablePointer[Xmlbuffer], anon1: I32)
use @xmlBufferLength[I32](anon0: NullablePointer[Xmlbuffer])
use @xmlCreateIntSubset[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewDtd[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlGetIntSubset[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmldoc] tag)
use @xmlFreeDtd[None](anon0: NullablePointer[Xmldtd])
use @xmlNewGlobalNs[NullablePointer[Xmlns]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlNewNs[NullablePointer[Xmlns]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlFreeNs[None](anon0: NullablePointer[Xmlns])
use @xmlFreeNsList[None](anon0: NullablePointer[Xmlns])
use @xmlNewDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlFreeDoc[None](anon0: NullablePointer[Xmldoc] tag)
use @xmlNewDocProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlNewProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlNewNsProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewNsPropEatName[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlFreePropList[None](anon0: NullablePointer[Xmlattr])
use @xmlFreeProp[None](anon0: NullablePointer[Xmlattr])
use @xmlCopyProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlattr])
use @xmlCopyPropList[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlattr])
use @xmlCopyDtd[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmldtd])
use @xmlCopyDoc[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmldoc] tag, anon1: I32)
use @xmlNewDocNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewDocNodeEatName[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlns], anon1: Pointer[U8] tag)
use @xmlNewNodeEatName[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlns], anon1: Pointer[U8] tag)
use @xmlNewChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewDocText[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlNewText[NullablePointer[Xmlnode]](anon0: Pointer[U8] tag)
use @xmlNewDocPI[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlNewPI[NullablePointer[Xmlnode]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlNewDocTextLen[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlNewTextLen[NullablePointer[Xmlnode]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlNewDocComment[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlNewComment[NullablePointer[Xmlnode]](anon0: Pointer[U8] tag)
use @xmlNewCDataBlock[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlNewCharRef[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlNewReference[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlCopyNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: I32)
use @xmlDocCopyNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmldoc] tag, anon2: I32)
use @xmlDocCopyNodeList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlCopyNodeList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlNewTextChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewDocRawNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlNewDocFragment[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag)
use @xmlGetLineNo[I64](anon0: NullablePointer[Xmlnode])
use @xmlGetNodePath[Pointer[U8]](anon0: NullablePointer[Xmlnode])
use @xmlDocGetRootElement[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag)
use @xmlGetLastChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlNodeIsText[I32](anon0: NullablePointer[Xmlnode])
use @xmlIsBlankNode[I32](anon0: NullablePointer[Xmlnode])
use @xmlDocSetRootElement[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlNodeSetName[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlAddChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlAddChildList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlReplaceNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlAddPrevSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlAddSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlAddNextSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlUnlinkNode[None](anon0: NullablePointer[Xmlnode])
use @xmlTextMerge[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlTextConcat[I32](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: I32)
use @xmlFreeNodeList[None](anon0: NullablePointer[Xmlnode])
use @xmlFreeNode[None](anon0: NullablePointer[Xmlnode])
use @xmlSetTreeDoc[None](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmldoc] tag)
use @xmlSetListDoc[None](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmldoc] tag)
use @xmlSearchNs[NullablePointer[Xmlns]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: Pointer[U8] tag)
use @xmlSearchNsByHref[NullablePointer[Xmlns]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: Pointer[U8] tag)
use @xmlGetNsList[Pointer[NullablePointer[Xmlns]]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlSetNs[None](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns])
use @xmlCopyNamespace[NullablePointer[Xmlns]](anon0: NullablePointer[Xmlns])
use @xmlCopyNamespaceList[NullablePointer[Xmlns]](anon0: NullablePointer[Xmlns])
use @xmlSetProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlSetNsProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlGetNoNsProp[Pointer[U8]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlGetProp[Pointer[U8]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlHasProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlHasNsProp[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlGetNsProp[Pointer[U8]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlStringGetNodeList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlStringLenGetNodeList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlNodeListGetString[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlNodeListGetRawString[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlNodeSetContent[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlNodeSetContentLen[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: I32)
use @xmlNodeAddContent[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlNodeAddContentLen[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: I32)
use @xmlNodeGetContent[Pointer[U8]](anon0: NullablePointer[Xmlnode])
use @xmlNodeBufGetContent[I32](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlnode])
use @xmlBufGetNodeContent[I32](anon0: NullablePointer[Xmlbuf], anon1: NullablePointer[Xmlnode])
use @xmlNodeGetLang[Pointer[U8]](anon0: NullablePointer[Xmlnode])
use @xmlNodeGetSpacePreserve[I32](anon0: NullablePointer[Xmlnode])
use @xmlNodeSetLang[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlNodeSetSpacePreserve[None](anon0: NullablePointer[Xmlnode], anon1: I32)
use @xmlNodeGetBase[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlNodeSetBase[None](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlRemoveProp[I32](anon0: NullablePointer[Xmlattr])
use @xmlUnsetNsProp[I32](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlns], anon2: Pointer[U8] tag)
use @xmlUnsetProp[I32](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag)
use @xmlBufferWriteCHAR[None](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag)
use @xmlBufferWriteChar[None](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag)
use @xmlBufferWriteQuotedString[None](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag)
use @xmlAttrSerializeTxtContent[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlattr], anon3: Pointer[U8] tag)
use @xmlReconciliateNs[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlDocDumpFormatMemory[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: I32)
use @xmlDocDumpMemory[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32])
use @xmlDocDumpMemoryEnc[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: Pointer[U8] tag)
use @xmlDocDumpFormatMemoryEnc[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: Pointer[U8] tag, anon4: I32)
use @xmlDocFormatDump[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag, anon2: I32)
use @xmlDocDump[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @xmlElemDump[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @xmlSaveFile[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag)
use @xmlSaveFormatFile[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag, anon2: I32)
use @xmlBufNodeDump[U64](anon0: NullablePointer[Xmlbuf], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: I32, anon4: I32)
use @xmlNodeDump[I32](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: I32, anon4: I32)
use @xmlSaveFileTo[I32](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag)
use @xmlSaveFormatFileTo[I32](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlNodeDumpOutput[None](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: I32, anon4: I32, anon5: Pointer[U8] tag)
use @xmlSaveFormatFileEnc[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlSaveFileEnc[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag)
use @xmlIsXHTML[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlGetDocCompressMode[I32](anon0: NullablePointer[Xmldoc] tag)
use @xmlSetDocCompressMode[None](anon0: NullablePointer[Xmldoc] tag, anon1: I32)
use @xmlGetCompressMode[I32]()
use @xmlSetCompressMode[None](anon0: I32)
use @xmlDOMWrapNewCtxt[NullablePointer[Xmldomwrapctxt]]()
use @xmlDOMWrapFreeCtxt[None](anon0: NullablePointer[Xmldomwrapctxt])
use @xmlDOMWrapReconcileNamespaces[I32](anon0: NullablePointer[Xmldomwrapctxt], anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlDOMWrapAdoptNode[I32](anon0: NullablePointer[Xmldomwrapctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmldoc] tag, anon4: NullablePointer[Xmlnode], anon5: I32)
use @xmlDOMWrapRemoveNode[I32](anon0: NullablePointer[Xmldomwrapctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: I32)
use @xmlDOMWrapCloneNode[I32](anon0: NullablePointer[Xmldomwrapctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[NullablePointer[Xmlnode]], anon4: NullablePointer[Xmldoc] tag, anon5: NullablePointer[Xmlnode], anon6: I32, anon7: I32)
use @xmlChildElementCount[U64](anon0: NullablePointer[Xmlnode])
use @xmlNextElementSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlFirstElementChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlLastElementChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlPreviousElementSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlnode])
use @xmlInitParser[None]()
use @xmlCleanupParser[None]()
use @xmlParserInputRead[I32](anon0: NullablePointer[Xmlparserinput], anon1: I32)
use @xmlParserInputGrow[I32](anon0: NullablePointer[Xmlparserinput], anon1: I32)
use @xmlParseDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlParseFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlParseMemory[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlSubstituteEntitiesDefault[I32](anon0: I32)
use @xmlKeepBlanksDefault[I32](anon0: I32)
use @xmlStopParser[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlPedanticParserDefault[I32](anon0: I32)
use @xmlLineNumbersDefault[I32](anon0: I32)
use @xmlRecoverDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlRecoverMemory[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlRecoverFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlParseDocument[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseExtParsedEnt[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlSAXUserParseFile[I32](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8], anon2: Pointer[U8] tag)
use @xmlSAXUserParseMemory[I32](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8], anon2: Pointer[U8] tag, anon3: I32)
use @xmlSAXParseDoc[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSAXParseMemory[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
use @xmlSAXParseMemoryWithData[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: I32, anon3: I32, anon4: Pointer[U8])
use @xmlSAXParseFile[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSAXParseFileWithData[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8])
use @xmlSAXParseEntity[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag)
use @xmlParseEntity[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlSAXParseDTD[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlParseDTD[NullablePointer[Xmldtd]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlIOParseDTD[NullablePointer[Xmldtd]](anon0: NullablePointer[Xmlsaxhandler], anon1: NullablePointer[Xmlparserinputbuffer], anon2: I32)
use @xmlParseBalancedChunkMemory[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlsaxhandler], anon2: Pointer[U8], anon3: I32, anon4: Pointer[U8] tag, anon5: Pointer[NullablePointer[Xmlnode]])
use @xmlParseInNodeContext[I32](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: I32, anon3: I32, anon4: Pointer[NullablePointer[Xmlnode]])
use @xmlParseBalancedChunkMemoryRecover[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlsaxhandler], anon2: Pointer[U8], anon3: I32, anon4: Pointer[U8] tag, anon5: Pointer[NullablePointer[Xmlnode]], anon6: I32)
use @xmlParseExternalEntity[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlsaxhandler], anon2: Pointer[U8], anon3: I32, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: Pointer[NullablePointer[Xmlnode]])
use @xmlParseCtxtExternalEntity[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[NullablePointer[Xmlnode]])
use @xmlNewParserCtxt[NullablePointer[Xmlparserctxt]]()
use @xmlInitParserCtxt[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlClearParserCtxt[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlFreeParserCtxt[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlSetupParserForBuffer[None](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlCreateDocParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag)
use @xmlGetFeaturesList[I32](anon0: Pointer[I32], anon1: Pointer[Pointer[U8] tag])
use @xmlGetFeature[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8])
use @xmlSetFeature[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8])
use @xmlCreatePushParserCtxt[NullablePointer[Xmlparserctxt]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8], anon2: Pointer[U8] tag, anon3: I32, anon4: Pointer[U8] tag)
use @xmlParseChunk[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
// Not Implemented Yet: use @xmlCreateIOParserCtxt[NullablePointer[Xmlparserctxt]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[FUNCTIONPOINTER], anon4: Pointer[U8], anon5: I32)
use @xmlNewIOInputStream[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparserinputbuffer], anon2: I32)
use @xmlParserFindNodeInfo[NullablePointer[Xmlparsernodeinfo]](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlnode])
use @xmlInitNodeInfoSeq[None](anon0: NullablePointer[Xmlparsernodeinfoseq])
use @xmlClearNodeInfoSeq[None](anon0: NullablePointer[Xmlparsernodeinfoseq])
use @xmlParserFindNodeInfoIndex[U64](anon0: NullablePointer[Xmlparsernodeinfoseq], anon1: NullablePointer[Xmlnode])
use @xmlParserAddNodeInfo[None](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparsernodeinfo])
// Not Implemented Yet: use @xmlSetExternalEntityLoader[None](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlGetExternalEntityLoader[Pointer[FUNCTIONPOINTER]]()
use @xmlLoadExternalEntity[NullablePointer[Xmlparserinput]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlparserctxt])
use @xmlByteConsumed[I64](anon0: NullablePointer[Xmlparserctxt])
use @xmlCtxtReset[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlCtxtResetPush[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlCtxtUseOptions[I32](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlReadDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlReadFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlReadMemory[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlReadFd[NullablePointer[Xmldoc]](anon0: I32, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
// Not Implemented Yet: use @xmlReadIO[NullablePointer[Xmldoc] tag](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @xmlCtxtReadDoc[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlCtxtReadFile[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlCtxtReadMemory[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @xmlCtxtReadFd[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
// Not Implemented Yet: use @xmlCtxtReadIO[NullablePointer[Xmldoc] tag](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8], anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: I32)
use @xmlHasFeature[I32](anon0: I32)
use @xmlInitializePredefinedEntities[None]()
use @xmlNewEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @xmlAddDocEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @xmlAddDtdEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @xmlGetPredefinedEntity[NullablePointer[Xmlentity]](anon0: Pointer[U8] tag)
use @xmlGetDocEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlGetDtdEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlGetParameterEntity[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlEncodeEntities[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlEncodeEntitiesReentrant[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlEncodeSpecialChars[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlCreateEntitiesTable[NullablePointer[Xmlhashtable]]()
use @xmlCopyEntitiesTable[NullablePointer[Xmlhashtable]](anon0: NullablePointer[Xmlhashtable])
use @xmlFreeEntitiesTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlDumpEntitiesTable[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlhashtable])
use @xmlDumpEntityDecl[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlentity])
use @xmlCleanupPredefinedEntities[None]()
use @xmlRegexpCompile[NullablePointer[Xmlregexp]](anon0: Pointer[U8] tag)
use @xmlRegFreeRegexp[None](anon0: NullablePointer[Xmlregexp])
use @xmlRegexpExec[I32](anon0: NullablePointer[Xmlregexp], anon1: Pointer[U8] tag)
use @xmlRegexpPrint[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlregexp])
use @xmlRegexpIsDeterminist[I32](anon0: NullablePointer[Xmlregexp])
// Not Implemented Yet: use @xmlRegNewExecCtxt[NullablePointer[Xmlregexecctxt]](anon0: NullablePointer[Xmlregexp], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlRegFreeExecCtxt[None](anon0: NullablePointer[Xmlregexecctxt])
use @xmlRegExecPushString[I32](anon0: NullablePointer[Xmlregexecctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8])
use @xmlRegExecPushString2[I32](anon0: NullablePointer[Xmlregexecctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8])
use @xmlRegExecNextValues[I32](anon0: NullablePointer[Xmlregexecctxt], anon1: Pointer[I32], anon2: Pointer[I32], anon3: Pointer[Pointer[U8] tag], anon4: Pointer[I32])
use @xmlRegExecErrInfo[I32](anon0: NullablePointer[Xmlregexecctxt], anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: Pointer[I32], anon4: Pointer[Pointer[U8] tag], anon5: Pointer[I32])
use @xmlInitializeDict[I32]()
use @xmlDictCreate[NullablePointer[Xmldict]]()
use @xmlDictSetLimit[U64](anon0: NullablePointer[Xmldict], anon1: U64)
use @xmlDictGetUsage[U64](anon0: NullablePointer[Xmldict])
use @xmlDictCreateSub[NullablePointer[Xmldict]](anon0: NullablePointer[Xmldict])
use @xmlDictReference[I32](anon0: NullablePointer[Xmldict])
use @xmlDictFree[None](anon0: NullablePointer[Xmldict])
use @xmlDictLookup[Pointer[U8]](anon0: NullablePointer[Xmldict], anon1: Pointer[U8] tag, anon2: I32)
use @xmlDictExists[Pointer[U8]](anon0: NullablePointer[Xmldict], anon1: Pointer[U8] tag, anon2: I32)
use @xmlDictQLookup[Pointer[U8]](anon0: NullablePointer[Xmldict], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlDictOwns[I32](anon0: NullablePointer[Xmldict], anon1: Pointer[U8] tag)
use @xmlDictSize[I32](anon0: NullablePointer[Xmldict])
use @xmlDictCleanup[None]()
// Not Implemented Yet: use @xmlMemSetup[I32](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlMemGet[I32](anon0: Pointer[Pointer[FUNCTIONPOINTER]], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[FUNCTIONPOINTER]])
// Not Implemented Yet: use @xmlGcMemSetup[I32](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[FUNCTIONPOINTER], anon4: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlGcMemGet[I32](anon0: Pointer[Pointer[FUNCTIONPOINTER]], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[FUNCTIONPOINTER]], anon4: Pointer[Pointer[FUNCTIONPOINTER]])
use @xmlInitMemory[I32]()
use @xmlCleanupMemory[None]()
use @xmlMemUsed[I32]()
use @xmlMemBlocks[I32]()
use @xmlMemDisplay[None](anon0: NullablePointer[IoFile])
use @xmlMemDisplayLast[None](anon0: NullablePointer[IoFile], anon1: I64)
use @xmlMemShow[None](anon0: NullablePointer[IoFile], anon1: I32)
use @xmlMemoryDump[None]()
use @xmlMemMalloc[Pointer[U8]](anon0: U64)
use @xmlMemRealloc[Pointer[U8]](anon0: Pointer[U8], anon1: U64)
use @xmlMemFree[None](anon0: Pointer[U8])
use @xmlMemoryStrdup[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlMallocLoc[Pointer[U8]](anon0: U64, anon1: Pointer[U8] tag, anon2: I32)
use @xmlReallocLoc[Pointer[U8]](anon0: Pointer[U8], anon1: U64, anon2: Pointer[U8] tag, anon3: I32)
use @xmlMallocAtomicLoc[Pointer[U8]](anon0: U64, anon1: Pointer[U8] tag, anon2: I32)
use @xmlMemStrdupLoc[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlNewMutex[NullablePointer[Xmlmutex]]()
use @xmlMutexLock[None](anon0: NullablePointer[Xmlmutex])
use @xmlMutexUnlock[None](anon0: NullablePointer[Xmlmutex])
use @xmlFreeMutex[None](anon0: NullablePointer[Xmlmutex])
use @xmlNewRMutex[NullablePointer[Xmlrmutex]]()
use @xmlRMutexLock[None](anon0: NullablePointer[Xmlrmutex])
use @xmlRMutexUnlock[None](anon0: NullablePointer[Xmlrmutex])
use @xmlFreeRMutex[None](anon0: NullablePointer[Xmlrmutex])
use @xmlInitThreads[None]()
use @xmlLockLibrary[None]()
use @xmlUnlockLibrary[None]()
use @xmlGetThreadId[I32]()
use @xmlIsMainThread[I32]()
use @xmlCleanupThreads[None]()
use @xmlGetGlobalState[NullablePointer[Xmlglobalstate]]()
use @xmlHashCreate[NullablePointer[Xmlhashtable]](anon0: I32)
use @xmlHashCreateDict[NullablePointer[Xmlhashtable]](anon0: I32, anon1: NullablePointer[Xmldict])
// Not Implemented Yet: use @xmlHashFree[None](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[FUNCTIONPOINTER])
use @xmlHashDefaultDeallocator[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlHashAddEntry[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8])
// Not Implemented Yet: use @xmlHashUpdateEntry[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8], anon3: Pointer[FUNCTIONPOINTER])
use @xmlHashAddEntry2[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8])
// Not Implemented Yet: use @xmlHashUpdateEntry2[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8], anon4: Pointer[FUNCTIONPOINTER])
use @xmlHashAddEntry3[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8])
// Not Implemented Yet: use @xmlHashUpdateEntry3[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8], anon5: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlHashRemoveEntry[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlHashRemoveEntry2[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlHashRemoveEntry3[I32](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[FUNCTIONPOINTER])
use @xmlHashLookup[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag)
use @xmlHashLookup2[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlHashLookup3[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlHashQLookup[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlHashQLookup2[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlHashQLookup3[Pointer[U8]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: Pointer[U8] tag)
// Not Implemented Yet: use @xmlHashCopy[NullablePointer[Xmlhashtable]](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[FUNCTIONPOINTER])
use @xmlHashSize[I32](anon0: NullablePointer[Xmlhashtable])
// Not Implemented Yet: use @xmlHashScan[None](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlHashScan3[None](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[FUNCTIONPOINTER], anon5: Pointer[U8])
// Not Implemented Yet: use @xmlHashScanFull[None](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlHashScanFull3[None](anon0: NullablePointer[Xmlhashtable], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[FUNCTIONPOINTER], anon5: Pointer[U8])
// Not Implemented Yet: use @xmlSetGenericErrorFunc[None](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @initGenericErrorDefaultFunc[None](anon0: Pointer[Pointer[FUNCTIONPOINTER]])
// Not Implemented Yet: use @xmlSetStructuredErrorFunc[None](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER])
use @xmlParserError[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlParserWarning[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlParserValidityError[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlParserValidityWarning[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlParserPrintFileInfo[None](anon0: NullablePointer[Xmlparserinput])
use @xmlParserPrintFileContext[None](anon0: NullablePointer[Xmlparserinput])
use @xmlGetLastError[NullablePointer[Xmlerror]]()
use @xmlResetLastError[None]()
use @xmlCtxtGetLastError[NullablePointer[Xmlerror]](anon0: Pointer[U8])
use @xmlCtxtResetLastError[None](anon0: Pointer[U8])
use @xmlResetError[None](anon0: NullablePointer[Xmlerror])
use @xmlCopyError[I32](anon0: NullablePointer[Xmlerror], anon1: NullablePointer[Xmlerror])
// Not Implemented Yet: use @xmlListCreate[NullablePointer[Xmllist]](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER])
use @xmlListDelete[None](anon0: NullablePointer[Xmllist])
use @xmlListSearch[Pointer[U8]](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListReverseSearch[Pointer[U8]](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListInsert[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListAppend[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListRemoveFirst[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListRemoveLast[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListRemoveAll[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListClear[None](anon0: NullablePointer[Xmllist])
use @xmlListEmpty[I32](anon0: NullablePointer[Xmllist])
use @xmlListFront[NullablePointer[Xmllink]](anon0: NullablePointer[Xmllist])
use @xmlListEnd[NullablePointer[Xmllink]](anon0: NullablePointer[Xmllist])
use @xmlListSize[I32](anon0: NullablePointer[Xmllist])
use @xmlListPopFront[None](anon0: NullablePointer[Xmllist])
use @xmlListPopBack[None](anon0: NullablePointer[Xmllist])
use @xmlListPushFront[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListPushBack[I32](anon0: NullablePointer[Xmllist], anon1: Pointer[U8])
use @xmlListReverse[None](anon0: NullablePointer[Xmllist])
use @xmlListSort[None](anon0: NullablePointer[Xmllist])
// Not Implemented Yet: use @xmlListWalk[None](anon0: NullablePointer[Xmllist], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlListReverseWalk[None](anon0: NullablePointer[Xmllist], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlListMerge[None](anon0: NullablePointer[Xmllist], anon1: NullablePointer[Xmllist])
use @xmlListDup[NullablePointer[Xmllist]](anon0: NullablePointer[Xmllist])
use @xmlListCopy[I32](anon0: NullablePointer[Xmllist], anon1: NullablePointer[Xmllist])
use @xmlLinkGetData[Pointer[U8]](anon0: NullablePointer[Xmllink])
use @xmlNewAutomata[NullablePointer[Xmlautomata]]()
use @xmlFreeAutomata[None](anon0: NullablePointer[Xmlautomata])
use @xmlAutomataGetInitState[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata])
use @xmlAutomataSetFinalState[I32](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate])
use @xmlAutomataNewState[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata])
use @xmlAutomataNewTransition[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: Pointer[U8])
use @xmlAutomataNewTransition2[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8])
use @xmlAutomataNewNegTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8])
use @xmlAutomataNewCountTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: I32, anon5: I32, anon6: Pointer[U8])
use @xmlAutomataNewCountTrans2[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32, anon6: I32, anon7: Pointer[U8])
use @xmlAutomataNewOnceTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: I32, anon5: I32, anon6: Pointer[U8])
use @xmlAutomataNewOnceTrans2[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32, anon6: I32, anon7: Pointer[U8])
use @xmlAutomataNewAllTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: I32)
use @xmlAutomataNewEpsilon[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate])
use @xmlAutomataNewCountedTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: I32)
use @xmlAutomataNewCounterTrans[NullablePointer[Xmlautomatastate]](anon0: NullablePointer[Xmlautomata], anon1: NullablePointer[Xmlautomatastate], anon2: NullablePointer[Xmlautomatastate], anon3: I32)
use @xmlAutomataNewCounter[I32](anon0: NullablePointer[Xmlautomata], anon1: I32, anon2: I32)
use @xmlAutomataCompile[NullablePointer[Xmlregexp]](anon0: NullablePointer[Xmlautomata])
use @xmlAutomataIsDeterminist[I32](anon0: NullablePointer[Xmlautomata])
use @xmlAddNotationDecl[NullablePointer[Xmlnotation]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldtd], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlCopyNotationTable[NullablePointer[Xmlhashtable]](anon0: NullablePointer[Xmlhashtable])
use @xmlFreeNotationTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlDumpNotationDecl[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlnotation])
use @xmlDumpNotationTable[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlhashtable])
use @xmlNewElementContent[NullablePointer[Xmlelementcontent]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCopyElementContent[NullablePointer[Xmlelementcontent]](anon0: NullablePointer[Xmlelementcontent])
use @xmlFreeElementContent[None](anon0: NullablePointer[Xmlelementcontent])
use @xmlNewDocElementContent[NullablePointer[Xmlelementcontent]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlCopyDocElementContent[NullablePointer[Xmlelementcontent]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlelementcontent])
use @xmlFreeDocElementContent[None](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlelementcontent])
use @xmlSnprintfElementContent[None](anon0: Pointer[U8] tag, anon1: I32, anon2: NullablePointer[Xmlelementcontent], anon3: I32)
use @xmlSprintfElementContent[None](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlelementcontent], anon2: I32)
use @xmlAddElementDecl[NullablePointer[Xmlelement]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldtd], anon2: Pointer[U8] tag, anon3: I32, anon4: NullablePointer[Xmlelementcontent])
use @xmlCopyElementTable[NullablePointer[Xmlhashtable]](anon0: NullablePointer[Xmlhashtable])
use @xmlFreeElementTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlDumpElementTable[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlhashtable])
use @xmlDumpElementDecl[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlelement])
use @xmlCreateEnumeration[NullablePointer[Xmlenumeration]](anon0: Pointer[U8] tag)
use @xmlFreeEnumeration[None](anon0: NullablePointer[Xmlenumeration])
use @xmlCopyEnumeration[NullablePointer[Xmlenumeration]](anon0: NullablePointer[Xmlenumeration])
use @xmlAddAttributeDecl[NullablePointer[Xmlattribute]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldtd], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32, anon6: I32, anon7: Pointer[U8] tag, anon8: NullablePointer[Xmlenumeration])
use @xmlCopyAttributeTable[NullablePointer[Xmlhashtable]](anon0: NullablePointer[Xmlhashtable])
use @xmlFreeAttributeTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlDumpAttributeTable[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlhashtable])
use @xmlDumpAttributeDecl[None](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmlattribute])
use @xmlAddID[NullablePointer[Xmlid]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlattr])
use @xmlFreeIDTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlGetID[NullablePointer[Xmlattr]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlIsID[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: NullablePointer[Xmlattr])
use @xmlRemoveID[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlattr])
use @xmlAddRef[NullablePointer[Xmlref]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlattr])
use @xmlFreeRefTable[None](anon0: NullablePointer[Xmlhashtable])
use @xmlIsRef[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: NullablePointer[Xmlattr])
use @xmlRemoveRef[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlattr])
use @xmlGetRefs[NullablePointer[Xmllist]](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlNewValidCtxt[NullablePointer[Xmlvalidctxt]]()
use @xmlFreeValidCtxt[None](anon0: NullablePointer[Xmlvalidctxt])
use @xmlValidateRoot[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlValidateElementDecl[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlelement])
use @xmlValidNormalizeAttributeValue[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlValidCtxtNormalizeAttributeValue[Pointer[U8]](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlValidateAttributeDecl[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlattribute])
use @xmlValidateAttributeValue[I32](anon0: I32, anon1: Pointer[U8] tag)
use @xmlValidateNotationDecl[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnotation])
use @xmlValidateDtd[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmldtd])
use @xmlValidateDtdFinal[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlValidateDocument[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlValidateElement[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @xmlValidateOneElement[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @xmlValidateOneAttribute[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlattr], anon4: Pointer[U8] tag)
use @xmlValidateOneNamespace[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag, anon4: NullablePointer[Xmlns], anon5: Pointer[U8] tag)
use @xmlValidateDocumentFinal[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlValidateNotationUse[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag)
use @xmlIsMixedElement[I32](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @xmlGetDtdAttrDesc[NullablePointer[Xmlattribute]](anon0: NullablePointer[Xmldtd], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlGetDtdQAttrDesc[NullablePointer[Xmlattribute]](anon0: NullablePointer[Xmldtd], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlGetDtdNotationDesc[NullablePointer[Xmlnotation]](anon0: NullablePointer[Xmldtd], anon1: Pointer[U8] tag)
use @xmlGetDtdQElementDesc[NullablePointer[Xmlelement]](anon0: NullablePointer[Xmldtd], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlGetDtdElementDesc[NullablePointer[Xmlelement]](anon0: NullablePointer[Xmldtd], anon1: Pointer[U8] tag)
use @xmlValidGetPotentialChildren[I32](anon0: NullablePointer[Xmlelementcontent], anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: I32)
use @xmlValidGetValidElements[I32](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode], anon2: Pointer[Pointer[U8] tag], anon3: I32)
use @xmlValidateNameValue[I32](anon0: Pointer[U8] tag)
use @xmlValidateNamesValue[I32](anon0: Pointer[U8] tag)
use @xmlValidateNmtokenValue[I32](anon0: Pointer[U8] tag)
use @xmlValidateNmtokensValue[I32](anon0: Pointer[U8] tag)
use @xmlValidBuildContentModel[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmlelement])
use @xmlValidatePushElement[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag)
use @xmlValidatePushCData[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: Pointer[U8] tag, anon2: I32)
use @xmlValidatePopElement[I32](anon0: NullablePointer[Xmlvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag)
use @xmlInitCharEncodingHandlers[None]()
use @xmlCleanupCharEncodingHandlers[None]()
use @xmlRegisterCharEncodingHandler[None](anon0: NullablePointer[Xmlcharencodinghandler])
use @xmlGetCharEncodingHandler[NullablePointer[Xmlcharencodinghandler]](anon0: I32)
use @xmlFindCharEncodingHandler[NullablePointer[Xmlcharencodinghandler]](anon0: Pointer[U8] tag)
// Not Implemented Yet: use @xmlNewCharEncodingHandler[NullablePointer[Xmlcharencodinghandler]](anon0: Pointer[U8] tag, anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER])
use @xmlAddEncodingAlias[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlDelEncodingAlias[I32](anon0: Pointer[U8] tag)
use @xmlGetEncodingAlias[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCleanupEncodingAliases[None]()
use @xmlParseCharEncoding[I32](anon0: Pointer[U8] tag)
use @xmlGetCharEncodingName[Pointer[U8]](anon0: I32)
use @xmlDetectCharEncoding[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCharEncOutFunc[I32](anon0: NullablePointer[Xmlcharencodinghandler], anon1: NullablePointer[Xmlbuffer], anon2: NullablePointer[Xmlbuffer])
use @xmlCharEncInFunc[I32](anon0: NullablePointer[Xmlcharencodinghandler], anon1: NullablePointer[Xmlbuffer], anon2: NullablePointer[Xmlbuffer])
use @xmlCharEncFirstLine[I32](anon0: NullablePointer[Xmlcharencodinghandler], anon1: NullablePointer[Xmlbuffer], anon2: NullablePointer[Xmlbuffer])
use @xmlCharEncCloseFunc[I32](anon0: NullablePointer[Xmlcharencodinghandler])
use @UTF8Toisolat1[I32](anon0: Pointer[U8] tag, anon1: Pointer[I32], anon2: Pointer[U8] tag, anon3: Pointer[I32])
use @isolat1ToUTF8[I32](anon0: Pointer[U8] tag, anon1: Pointer[I32], anon2: Pointer[U8] tag, anon3: Pointer[I32])
// Not Implemented Yet: use @xlinkGetDefaultDetect[Pointer[FUNCTIONPOINTER]]()
// Not Implemented Yet: use @xlinkSetDefaultDetect[None](anon0: Pointer[FUNCTIONPOINTER])
use @xlinkGetDefaultHandler[NullablePointer[Xlinkhandler]]()
use @xlinkSetDefaultHandler[None](anon0: NullablePointer[Xlinkhandler])
use @xlinkIsLink[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @xmlSAX2GetPublicId[Pointer[U8]](anon0: Pointer[U8])
use @xmlSAX2GetSystemId[Pointer[U8]](anon0: Pointer[U8])
use @xmlSAX2SetDocumentLocator[None](anon0: Pointer[U8], anon1: NullablePointer[Xmlsaxlocator])
use @xmlSAX2GetLineNumber[I32](anon0: Pointer[U8])
use @xmlSAX2GetColumnNumber[I32](anon0: Pointer[U8])
use @xmlSAX2IsStandalone[I32](anon0: Pointer[U8])
use @xmlSAX2HasInternalSubset[I32](anon0: Pointer[U8])
use @xmlSAX2HasExternalSubset[I32](anon0: Pointer[U8])
use @xmlSAX2InternalSubset[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlSAX2ExternalSubset[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlSAX2GetEntity[NullablePointer[Xmlentity]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlSAX2GetParameterEntity[NullablePointer[Xmlentity]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlSAX2ResolveEntity[NullablePointer[Xmlparserinput]](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlSAX2EntityDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @xmlSAX2AttributeDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32, anon4: I32, anon5: Pointer[U8] tag, anon6: NullablePointer[Xmlenumeration])
use @xmlSAX2ElementDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32, anon3: NullablePointer[Xmlelementcontent])
use @xmlSAX2NotationDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlSAX2UnparsedEntityDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlSAX2StartDocument[None](anon0: Pointer[U8])
use @xmlSAX2EndDocument[None](anon0: Pointer[U8])
use @xmlSAX2StartElement[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8] tag])
use @xmlSAX2EndElement[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlSAX2StartElementNs[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32, anon5: Pointer[Pointer[U8] tag], anon6: I32, anon7: I32, anon8: Pointer[Pointer[U8] tag])
use @xmlSAX2EndElementNs[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlSAX2Reference[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlSAX2Characters[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSAX2IgnorableWhitespace[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSAX2ProcessingInstruction[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlSAX2Comment[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlSAX2CDataBlock[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSAXDefaultVersion[I32](anon0: I32)
use @xmlSAXVersion[I32](anon0: NullablePointer[Xmlsaxhandler], anon1: I32)
use @xmlSAX2InitDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandler], anon1: I32)
use @xmlSAX2InitHtmlDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandler])
use @htmlDefaultSAXHandlerInit[None]()
use @xmlSAX2InitDocbDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandler])
use @docbDefaultSAXHandlerInit[None]()
use @xmlDefaultSAXHandlerInit[None]()
use @xmlInitGlobals[None]()
use @xmlCleanupGlobals[None]()
// Not Implemented Yet: use @xmlParserInputBufferCreateFilenameDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlOutputBufferCreateFilenameDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
use @xmlInitializeGlobalState[None](anon0: NullablePointer[Xmlglobalstate])
// Not Implemented Yet: use @xmlThrDefSetGenericErrorFunc[None](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlThrDefSetStructuredErrorFunc[None](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlRegisterNodeDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlThrDefRegisterNodeDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlDeregisterNodeDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlThrDefDeregisterNodeDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlThrDefOutputBufferCreateFilenameDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlThrDefParserInputBufferCreateFilenameDefault[Pointer[FUNCTIONPOINTER]](anon0: Pointer[FUNCTIONPOINTER])
use @__docbDefaultSAXHandler[NullablePointer[Xmlsaxhandlerv1]]()
use @__htmlDefaultSAXHandler[NullablePointer[Xmlsaxhandlerv1]]()
use @__xmlLastError[NullablePointer[Xmlerror]]()
use @__oldXMLWDcompatibility[Pointer[I32]]()
use @__xmlBufferAllocScheme[Pointer[I32]]()
use @xmlThrDefBufferAllocScheme[I32](anon0: I32)
use @__xmlDefaultBufferSize[Pointer[I32]]()
use @xmlThrDefDefaultBufferSize[I32](anon0: I32)
use @__xmlDefaultSAXHandler[NullablePointer[Xmlsaxhandlerv1]]()
use @__xmlDefaultSAXLocator[NullablePointer[Xmlsaxlocator]]()
use @__xmlDoValidityCheckingDefaultValue[Pointer[I32]]()
use @xmlThrDefDoValidityCheckingDefaultValue[I32](anon0: I32)
// Not Implemented Yet: use @__xmlGenericError[Pointer[Pointer[FUNCTIONPOINTER]]]()
// Not Implemented Yet: use @__xmlStructuredError[Pointer[Pointer[FUNCTIONPOINTER]]]()
use @__xmlGenericErrorContext[Pointer[Pointer[U8]]]()
use @__xmlStructuredErrorContext[Pointer[Pointer[U8]]]()
use @__xmlGetWarningsDefaultValue[Pointer[I32]]()
use @xmlThrDefGetWarningsDefaultValue[I32](anon0: I32)
use @__xmlIndentTreeOutput[Pointer[I32]]()
use @xmlThrDefIndentTreeOutput[I32](anon0: I32)
use @__xmlTreeIndentString[Pointer[Pointer[U8]]]()
use @xmlThrDefTreeIndentString[Pointer[U8]](anon0: Pointer[U8] tag)
use @__xmlKeepBlanksDefaultValue[Pointer[I32]]()
use @xmlThrDefKeepBlanksDefaultValue[I32](anon0: I32)
use @__xmlLineNumbersDefaultValue[Pointer[I32]]()
use @xmlThrDefLineNumbersDefaultValue[I32](anon0: I32)
use @__xmlLoadExtDtdDefaultValue[Pointer[I32]]()
use @xmlThrDefLoadExtDtdDefaultValue[I32](anon0: I32)
use @__xmlParserDebugEntities[Pointer[I32]]()
use @xmlThrDefParserDebugEntities[I32](anon0: I32)
use @__xmlParserVersion[Pointer[Pointer[U8]]]()
use @__xmlPedanticParserDefaultValue[Pointer[I32]]()
use @xmlThrDefPedanticParserDefaultValue[I32](anon0: I32)
use @__xmlSaveNoEmptyTags[Pointer[I32]]()
use @xmlThrDefSaveNoEmptyTags[I32](anon0: I32)
use @__xmlSubstituteEntitiesDefaultValue[Pointer[I32]]()
use @xmlThrDefSubstituteEntitiesDefaultValue[I32](anon0: I32)
// Not Implemented Yet: use @__xmlRegisterNodeDefaultValue[Pointer[Pointer[FUNCTIONPOINTER]]]()
// Not Implemented Yet: use @__xmlDeregisterNodeDefaultValue[Pointer[Pointer[FUNCTIONPOINTER]]]()
// Not Implemented Yet: use @__xmlParserInputBufferCreateFilenameValue[Pointer[Pointer[FUNCTIONPOINTER]]]()
// Not Implemented Yet: use @__xmlOutputBufferCreateFilenameValue[Pointer[Pointer[FUNCTIONPOINTER]]]()
use @xmlNewCatalog[NullablePointer[Xmlcatalog]](anon0: I32)
use @xmlLoadACatalog[NullablePointer[Xmlcatalog]](anon0: Pointer[U8] tag)
use @xmlLoadSGMLSuperCatalog[NullablePointer[Xmlcatalog]](anon0: Pointer[U8] tag)
use @xmlConvertSGMLCatalog[I32](anon0: NullablePointer[Xmlcatalog])
use @xmlACatalogAdd[I32](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlACatalogRemove[I32](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag)
use @xmlACatalogResolve[Pointer[U8]](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlACatalogResolveSystem[Pointer[U8]](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag)
use @xmlACatalogResolvePublic[Pointer[U8]](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag)
use @xmlACatalogResolveURI[Pointer[U8]](anon0: NullablePointer[Xmlcatalog], anon1: Pointer[U8] tag)
use @xmlACatalogDump[None](anon0: NullablePointer[Xmlcatalog], anon1: NullablePointer[IoFile])
use @xmlFreeCatalog[None](anon0: NullablePointer[Xmlcatalog])
use @xmlCatalogIsEmpty[I32](anon0: NullablePointer[Xmlcatalog])
use @xmlInitializeCatalog[None]()
use @xmlLoadCatalog[I32](anon0: Pointer[U8] tag)
use @xmlLoadCatalogs[None](anon0: Pointer[U8] tag)
use @xmlCatalogCleanup[None]()
use @xmlCatalogDump[None](anon0: NullablePointer[IoFile])
use @xmlCatalogResolve[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlCatalogResolveSystem[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCatalogResolvePublic[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCatalogResolveURI[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCatalogAdd[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlCatalogRemove[I32](anon0: Pointer[U8] tag)
use @xmlParseCatalogFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag)
use @xmlCatalogConvert[I32]()
use @xmlCatalogFreeLocal[None](anon0: Pointer[U8])
use @xmlCatalogAddLocal[Pointer[U8]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlCatalogLocalResolve[Pointer[U8]](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlCatalogLocalResolveURI[Pointer[U8]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlCatalogSetDebug[I32](anon0: I32)
use @xmlCatalogSetDefaultPrefer[I32](anon0: I32)
use @xmlCatalogSetDefaults[None](anon0: I32)
use @xmlCatalogGetDefaults[I32]()
use @xmlCatalogGetSystem[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCatalogGetPublic[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlCharInRange[I32](anon0: U32, anon1: NullablePointer[Xmlchrangegroup])
use @xmlIsBaseChar[I32](anon0: U32)
use @xmlIsBlank[I32](anon0: U32)
use @xmlIsChar[I32](anon0: U32)
use @xmlIsCombining[I32](anon0: U32)
use @xmlIsDigit[I32](anon0: U32)
use @xmlIsExtender[I32](anon0: U32)
use @xmlIsIdeographic[I32](anon0: U32)
use @xmlIsPubidChar[I32](anon0: U32)
use @xmlXPathFreeObject[None](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathNodeSetCreate[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnode])
use @xmlXPathFreeNodeSetList[None](anon0: NullablePointer[Xmlxpathobject] tag)
use @xmlXPathFreeNodeSet[None](anon0: NullablePointer[Xmlnodeset] tag)
use @xmlXPathObjectCopy[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathCmpNodes[I32](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlXPathCastNumberToBoolean[I32](anon0: F64)
use @xmlXPathCastStringToBoolean[I32](anon0: Pointer[U8] tag)
use @xmlXPathCastNodeSetToBoolean[I32](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathCastToBoolean[I32](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathCastBooleanToNumber[F64](anon0: I32)
use @xmlXPathCastStringToNumber[F64](anon0: Pointer[U8] tag)
use @xmlXPathCastNodeToNumber[F64](anon0: NullablePointer[Xmlnode])
use @xmlXPathCastNodeSetToNumber[F64](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathCastToNumber[F64](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathCastBooleanToString[Pointer[U8]](anon0: I32)
use @xmlXPathCastNumberToString[Pointer[U8]](anon0: F64)
use @xmlXPathCastNodeToString[Pointer[U8]](anon0: NullablePointer[Xmlnode])
use @xmlXPathCastNodeSetToString[Pointer[U8]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathCastToString[Pointer[U8]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathConvertBoolean[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathConvertNumber[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathConvertString[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPathNewContext[NullablePointer[Xmlxpathcontext]](anon0: NullablePointer[Xmldoc] tag)
use @xmlXPathFreeContext[None](anon0: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathContextSetCache[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: I32, anon2: I32, anon3: I32)
use @xmlXPathOrderDocElems[I64](anon0: NullablePointer[Xmldoc] tag)
use @xmlXPathSetContextNode[I32](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathNodeEval[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathEval[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathEvalExpression[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathEvalPredicate[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: NullablePointer[Xmlxpathobject])
use @xmlXPathCompile[NullablePointer[Xmlxpathcompexpr]](anon0: Pointer[U8] tag)
use @xmlXPathCtxtCompile[NullablePointer[Xmlxpathcompexpr]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag)
use @xmlXPathCompiledEval[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathcompexpr], anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathCompiledEvalToBoolean[I32](anon0: NullablePointer[Xmlxpathcompexpr], anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathFreeCompExpr[None](anon0: NullablePointer[Xmlxpathcompexpr])
use @xmlXPathInit[None]()
use @xmlXPathIsNaN[I32](anon0: F64)
use @xmlXPathIsInf[I32](anon0: F64)
use @xmlDebugDumpString[None](anon0: NullablePointer[IoFile], anon1: Pointer[U8] tag)
use @xmlDebugDumpAttr[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlattr], anon2: I32)
use @xmlDebugDumpAttrList[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlattr], anon2: I32)
use @xmlDebugDumpOneNode[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlDebugDumpNode[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlDebugDumpNodeList[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlDebugDumpDocumentHead[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @xmlDebugDumpDocument[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @xmlDebugDumpDTD[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldtd])
use @xmlDebugDumpEntities[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @xmlDebugCheckDocument[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @xmlLsOneNode[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlnode])
use @xmlLsCountNode[I32](anon0: NullablePointer[Xmlnode])
use @xmlBoolToText[Pointer[U8]](anon0: I32)
use @xmlShellPrintXPathError[None](anon0: I32, anon1: Pointer[U8] tag)
use @xmlShellPrintXPathResult[None](anon0: NullablePointer[Xmlxpathobject])
use @xmlShellList[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellBase[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellDir[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellLoad[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellPrintNode[None](anon0: NullablePointer[Xmlnode])
use @xmlShellCat[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellWrite[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellSave[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellValidate[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellDu[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
use @xmlShellPwd[I32](anon0: NullablePointer[Xmlshellctxt], anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode], anon3: NullablePointer[Xmlnode])
// Not Implemented Yet: use @xmlShell[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: Pointer[FUNCTIONPOINTER], anon3: NullablePointer[IoFile])
use @htmlTagLookup[NullablePointer[Htmlelemdesc]](anon0: Pointer[U8] tag)
use @htmlEntityLookup[NullablePointer[Htmlentitydesc]](anon0: Pointer[U8] tag)
use @htmlEntityValueLookup[NullablePointer[Htmlentitydesc]](anon0: U32)
use @htmlIsAutoClosed[I32](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode])
use @htmlAutoCloseTag[I32](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlnode])
use @htmlParseEntityRef[NullablePointer[Htmlentitydesc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag])
use @htmlParseCharRef[I32](anon0: NullablePointer[Xmlparserctxt])
use @htmlParseElement[None](anon0: NullablePointer[Xmlparserctxt])
use @htmlNewParserCtxt[NullablePointer[Xmlparserctxt]]()
use @htmlCreateMemoryParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @htmlParseDocument[I32](anon0: NullablePointer[Xmlparserctxt])
use @htmlSAXParseDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlsaxhandler], anon3: Pointer[U8])
use @htmlParseDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @htmlSAXParseFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlsaxhandler], anon3: Pointer[U8])
use @htmlParseFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @UTF8ToHtml[I32](anon0: Pointer[U8] tag, anon1: Pointer[I32], anon2: Pointer[U8] tag, anon3: Pointer[I32])
use @htmlEncodeEntities[I32](anon0: Pointer[U8] tag, anon1: Pointer[I32], anon2: Pointer[U8] tag, anon3: Pointer[I32], anon4: I32)
use @htmlIsScriptAttribute[I32](anon0: Pointer[U8] tag)
use @htmlHandleOmittedElem[I32](anon0: I32)
use @htmlCreatePushParserCtxt[NullablePointer[Xmlparserctxt]](anon0: NullablePointer[Xmlsaxhandler], anon1: Pointer[U8], anon2: Pointer[U8] tag, anon3: I32, anon4: Pointer[U8] tag, anon5: I32)
use @htmlParseChunk[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
use @htmlFreeParserCtxt[None](anon0: NullablePointer[Xmlparserctxt])
use @htmlCtxtReset[None](anon0: NullablePointer[Xmlparserctxt])
use @htmlCtxtUseOptions[I32](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @htmlReadDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @htmlReadFile[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @htmlReadMemory[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @htmlReadFd[NullablePointer[Xmldoc]](anon0: I32, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
// Not Implemented Yet: use @htmlReadIO[NullablePointer[Xmldoc] tag](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @htmlCtxtReadDoc[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @htmlCtxtReadFile[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @htmlCtxtReadMemory[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @htmlCtxtReadFd[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmlparserctxt], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
// Not Implemented Yet: use @htmlCtxtReadIO[NullablePointer[Xmldoc] tag](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8], anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: I32)
use @htmlAttrAllowed[I32](anon0: NullablePointer[Htmlelemdesc], anon1: Pointer[U8] tag, anon2: I32)
use @htmlElementAllowedHere[I32](anon0: NullablePointer[Htmlelemdesc], anon1: Pointer[U8] tag)
use @htmlElementStatusHere[I32](anon0: NullablePointer[Htmlelemdesc], anon1: NullablePointer[Htmlelemdesc])
use @htmlNodeStatus[I32](anon0: NullablePointer[Xmlnode], anon1: I32)
use @htmlNewDoc[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @htmlNewDocNoDtD[NullablePointer[Xmldoc]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @htmlGetMetaEncoding[Pointer[U8]](anon0: NullablePointer[Xmldoc] tag)
use @htmlSetMetaEncoding[I32](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[U8] tag)
use @htmlDocDumpMemory[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32])
use @htmlDocDumpMemoryFormat[None](anon0: NullablePointer[Xmldoc] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[I32], anon3: I32)
use @htmlDocDump[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag)
use @htmlSaveFile[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag)
use @htmlNodeDump[I32](anon0: NullablePointer[Xmlbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @htmlNodeDumpFile[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @htmlNodeDumpFileFormat[I32](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag, anon4: I32)
use @htmlSaveFileEnc[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag)
use @htmlSaveFileFormat[I32](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: I32)
use @htmlNodeDumpFormatOutput[None](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag, anon4: I32)
use @htmlDocContentDumpOutput[None](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag)
use @htmlDocContentDumpFormatOutput[None](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: Pointer[U8] tag, anon3: I32)
use @htmlNodeDumpOutput[None](anon0: NullablePointer[Xmloutputbuffer], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode], anon3: Pointer[U8] tag)
use @htmlIsBooleanAttr[I32](anon0: Pointer[U8] tag)
use @xmlNanoFTPInit[None]()
use @xmlNanoFTPCleanup[None]()
use @xmlNanoFTPNewCtxt[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlNanoFTPFreeCtxt[None](anon0: Pointer[U8])
use @xmlNanoFTPConnectTo[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlNanoFTPOpen[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlNanoFTPConnect[I32](anon0: Pointer[U8])
use @xmlNanoFTPClose[I32](anon0: Pointer[U8])
use @xmlNanoFTPQuit[I32](anon0: Pointer[U8])
use @xmlNanoFTPScanProxy[None](anon0: Pointer[U8] tag)
use @xmlNanoFTPProxy[None](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlNanoFTPUpdateURL[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlNanoFTPGetResponse[I32](anon0: Pointer[U8])
use @xmlNanoFTPCheckResponse[I32](anon0: Pointer[U8])
use @xmlNanoFTPCwd[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlNanoFTPDele[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlNanoFTPGetConnection[I32](anon0: Pointer[U8])
use @xmlNanoFTPCloseConnection[I32](anon0: Pointer[U8])
// Not Implemented Yet: use @xmlNanoFTPList[I32](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag)
use @xmlNanoFTPGetSocket[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
// Not Implemented Yet: use @xmlNanoFTPGet[I32](anon0: Pointer[U8], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag)
use @xmlNanoFTPRead[I32](anon0: Pointer[U8], anon1: Pointer[U8], anon2: I32)
use @xmlNanoHTTPInit[None]()
use @xmlNanoHTTPCleanup[None]()
use @xmlNanoHTTPScanProxy[None](anon0: Pointer[U8] tag)
use @xmlNanoHTTPFetch[I32](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8] tag])
use @xmlNanoHTTPMethod[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[Pointer[U8] tag], anon4: Pointer[U8] tag, anon5: I32)
use @xmlNanoHTTPMethodRedir[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[Pointer[U8] tag], anon4: Pointer[Pointer[U8] tag], anon5: Pointer[U8] tag, anon6: I32)
use @xmlNanoHTTPOpen[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[Pointer[U8] tag])
use @xmlNanoHTTPOpenRedir[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[Pointer[U8] tag], anon2: Pointer[Pointer[U8] tag])
use @xmlNanoHTTPReturnCode[I32](anon0: Pointer[U8])
use @xmlNanoHTTPAuthHeader[Pointer[U8]](anon0: Pointer[U8])
use @xmlNanoHTTPRedir[Pointer[U8]](anon0: Pointer[U8])
use @xmlNanoHTTPContentLength[I32](anon0: Pointer[U8])
use @xmlNanoHTTPEncoding[Pointer[U8]](anon0: Pointer[U8])
use @xmlNanoHTTPMimeType[Pointer[U8]](anon0: Pointer[U8])
use @xmlNanoHTTPRead[I32](anon0: Pointer[U8], anon1: Pointer[U8], anon2: I32)
use @xmlNanoHTTPSave[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @xmlNanoHTTPClose[None](anon0: Pointer[U8])
use @xmlIsLetter[I32](anon0: I32)
use @xmlCreateFileParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag)
use @xmlCreateURLParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCreateMemoryParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCreateEntityParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlSwitchEncoding[I32](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlSwitchToEncoding[I32](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlcharencodinghandler])
use @xmlSwitchInputEncoding[I32](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparserinput], anon2: NullablePointer[Xmlcharencodinghandler])
use @xmlNewStringInputStream[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag)
use @xmlNewEntityInputStream[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlentity])
use @xmlPushInput[I32](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparserinput])
use @xmlPopInput[U8](anon0: NullablePointer[Xmlparserctxt])
use @xmlFreeInputStream[None](anon0: NullablePointer[Xmlparserinput])
use @xmlNewInputFromFile[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag)
use @xmlNewInputStream[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt])
use @xmlSplitQName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8] tag])
use @xmlParseName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseNmtoken[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEntityValue[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag])
use @xmlParseAttValue[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseSystemLiteral[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParsePubidLiteral[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseCharData[None](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlParseExternalID[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag], anon2: I32)
use @xmlParseComment[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParsePITarget[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParsePI[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseNotationDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEntityDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseDefaultDecl[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag])
use @xmlParseNotationType[NullablePointer[Xmlenumeration]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEnumerationType[NullablePointer[Xmlenumeration]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEnumeratedType[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[NullablePointer[Xmlenumeration]])
use @xmlParseAttributeType[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[NullablePointer[Xmlenumeration]])
use @xmlParseAttributeListDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseElementMixedContentDecl[NullablePointer[Xmlelementcontent]](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlParseElementChildrenContentDecl[NullablePointer[Xmlelementcontent]](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlParseElementContentDecl[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[NullablePointer[Xmlelementcontent]])
use @xmlParseElementDecl[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseMarkupDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseCharRef[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEntityRef[NullablePointer[Xmlentity]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseReference[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParsePEReference[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseDocTypeDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseAttribute[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag])
use @xmlParseStartTag[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEndTag[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseCDSect[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseContent[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseElement[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseVersionNum[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseVersionInfo[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEncName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseEncodingDecl[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseSDDecl[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseXMLDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseTextDecl[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseMisc[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseExternalSubset[None](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlStringDecodeEntities[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: U8, anon4: U8, anon5: U8)
use @xmlStringLenDecodeEntities[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: I32, anon3: I32, anon4: U8, anon5: U8, anon6: U8)
use @nodePush[I32](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlnode])
use @nodePop[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlparserctxt])
use @inputPush[I32](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlparserinput])
use @inputPop[NullablePointer[Xmlparserinput]](anon0: NullablePointer[Xmlparserctxt])
use @namePop[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @namePush[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag)
use @xmlSkipBlankChars[I32](anon0: NullablePointer[Xmlparserctxt])
use @xmlStringCurrentChar[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[U8] tag, anon2: Pointer[I32])
use @xmlParserHandlePEReference[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlCheckLanguageID[I32](anon0: Pointer[U8] tag)
use @xmlCurrentChar[I32](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[I32])
use @xmlCopyCharMultiByte[I32](anon0: Pointer[U8] tag, anon1: I32)
use @xmlCopyChar[I32](anon0: I32, anon1: Pointer[U8] tag, anon2: I32)
use @xmlNextChar[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlParserInputShrink[None](anon0: NullablePointer[Xmlparserinput])
use @htmlInitAutoClose[None]()
use @htmlCreateFileParserCtxt[NullablePointer[Xmlparserctxt]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
// Not Implemented Yet: use @xmlSetEntityReferenceFunc[None](anon0: Pointer[FUNCTIONPOINTER])
use @xmlParseQuotedString[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParseNamespace[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlNamespaceParseNSDef[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlScanName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlNamespaceParseNCName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt])
use @xmlParserHandleReference[None](anon0: NullablePointer[Xmlparserctxt])
use @xmlNamespaceParseQName[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: Pointer[Pointer[U8] tag])
use @xmlDecodeEntities[Pointer[U8]](anon0: NullablePointer[Xmlparserctxt], anon1: I32, anon2: I32, anon3: U8, anon4: U8, anon5: U8)
use @xmlHandleEntity[None](anon0: NullablePointer[Xmlparserctxt], anon1: NullablePointer[Xmlentity])
use @xmlFreePattern[None](anon0: NullablePointer[Xmlpattern])
use @xmlFreePatternList[None](anon0: NullablePointer[Xmlpattern])
use @xmlPatterncompile[NullablePointer[Xmlpattern]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmldict], anon2: I32, anon3: Pointer[Pointer[U8] tag])
use @xmlPatternMatch[I32](anon0: NullablePointer[Xmlpattern], anon1: NullablePointer[Xmlnode])
use @xmlPatternStreamable[I32](anon0: NullablePointer[Xmlpattern])
use @xmlPatternMaxDepth[I32](anon0: NullablePointer[Xmlpattern])
use @xmlPatternMinDepth[I32](anon0: NullablePointer[Xmlpattern])
use @xmlPatternFromRoot[I32](anon0: NullablePointer[Xmlpattern])
use @xmlPatternGetStreamCtxt[NullablePointer[Xmlstreamctxt]](anon0: NullablePointer[Xmlpattern])
use @xmlFreeStreamCtxt[None](anon0: NullablePointer[Xmlstreamctxt])
use @xmlStreamPushNode[I32](anon0: NullablePointer[Xmlstreamctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlStreamPush[I32](anon0: NullablePointer[Xmlstreamctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlStreamPushAttr[I32](anon0: NullablePointer[Xmlstreamctxt], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlStreamPop[I32](anon0: NullablePointer[Xmlstreamctxt])
use @xmlStreamWantsAnyNode[I32](anon0: NullablePointer[Xmlstreamctxt])
use @xmlRelaxNGInitTypes[I32]()
use @xmlRelaxNGCleanupTypes[None]()
use @xmlRelaxNGNewParserCtxt[NullablePointer[Xmlrelaxngparserctxt]](anon0: Pointer[U8] tag)
use @xmlRelaxNGNewMemParserCtxt[NullablePointer[Xmlrelaxngparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlRelaxNGNewDocParserCtxt[NullablePointer[Xmlrelaxngparserctxt]](anon0: NullablePointer[Xmldoc] tag)
use @xmlRelaxParserSetFlag[I32](anon0: NullablePointer[Xmlrelaxngparserctxt], anon1: I32)
use @xmlRelaxNGFreeParserCtxt[None](anon0: NullablePointer[Xmlrelaxngparserctxt])
// Not Implemented Yet: use @xmlRelaxNGSetParserErrors[None](anon0: NullablePointer[Xmlrelaxngparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8])
// Not Implemented Yet: use @xmlRelaxNGGetParserErrors[I32](anon0: NullablePointer[Xmlrelaxngparserctxt], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[U8]])
// Not Implemented Yet: use @xmlRelaxNGSetParserStructuredErrors[None](anon0: NullablePointer[Xmlrelaxngparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlRelaxNGParse[NullablePointer[Xmlrelaxng]](anon0: NullablePointer[Xmlrelaxngparserctxt])
use @xmlRelaxNGFree[None](anon0: NullablePointer[Xmlrelaxng])
use @xmlRelaxNGDump[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlrelaxng])
use @xmlRelaxNGDumpTree[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlrelaxng])
// Not Implemented Yet: use @xmlRelaxNGSetValidErrors[None](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8])
// Not Implemented Yet: use @xmlRelaxNGGetValidErrors[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[U8]])
// Not Implemented Yet: use @xmlRelaxNGSetValidStructuredErrors[None](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlRelaxNGNewValidCtxt[NullablePointer[Xmlrelaxngvalidctxt]](anon0: NullablePointer[Xmlrelaxng])
use @xmlRelaxNGFreeValidCtxt[None](anon0: NullablePointer[Xmlrelaxngvalidctxt])
use @xmlRelaxNGValidateDoc[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlRelaxNGValidatePushElement[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @xmlRelaxNGValidatePushCData[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: Pointer[U8] tag, anon2: I32)
use @xmlRelaxNGValidatePopElement[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @xmlRelaxNGValidateFullElement[I32](anon0: NullablePointer[Xmlrelaxngvalidctxt], anon1: NullablePointer[Xmldoc] tag, anon2: NullablePointer[Xmlnode])
use @getPublicId[Pointer[U8]](anon0: Pointer[U8])
use @getSystemId[Pointer[U8]](anon0: Pointer[U8])
use @setDocumentLocator[None](anon0: Pointer[U8], anon1: NullablePointer[Xmlsaxlocator])
use @getLineNumber[I32](anon0: Pointer[U8])
use @getColumnNumber[I32](anon0: Pointer[U8])
use @isStandalone[I32](anon0: Pointer[U8])
use @hasInternalSubset[I32](anon0: Pointer[U8])
use @hasExternalSubset[I32](anon0: Pointer[U8])
use @internalSubset[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @externalSubset[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @getEntity[NullablePointer[Xmlentity]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @getParameterEntity[NullablePointer[Xmlentity]](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @resolveEntity[NullablePointer[Xmlparserinput]](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @entityDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @attributeDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32, anon4: I32, anon5: Pointer[U8] tag, anon6: NullablePointer[Xmlenumeration])
use @elementDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32, anon3: NullablePointer[Xmlelementcontent])
use @notationDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @unparsedEntityDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @startDocument[None](anon0: Pointer[U8])
use @endDocument[None](anon0: Pointer[U8])
use @attribute[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @startElement[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8] tag])
use @endElement[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @reference[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @characters[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @ignorableWhitespace[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @processingInstruction[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @globalNamespace[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @setNamespace[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @getNamespace[NullablePointer[Xmlns]](anon0: Pointer[U8])
use @checkNamespace[I32](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @namespaceDecl[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @comment[None](anon0: Pointer[U8], anon1: Pointer[U8] tag)
use @cdataBlock[None](anon0: Pointer[U8], anon1: Pointer[U8] tag, anon2: I32)
use @initxmlDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandlerv1], anon1: I32)
use @inithtmlDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandlerv1])
use @initdocbDefaultSAXHandler[None](anon0: NullablePointer[Xmlsaxhandlerv1])
use @xmlSchemaFreeType[None](anon0: NullablePointer[Xmlschematype])
use @xmlSchemaFreeWildcard[None](anon0: NullablePointer[Xmlschemawildcard])
use @xmlSchematronNewParserCtxt[NullablePointer[Xmlschematronparserctxt]](anon0: Pointer[U8] tag)
use @xmlSchematronNewMemParserCtxt[NullablePointer[Xmlschematronparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlSchematronNewDocParserCtxt[NullablePointer[Xmlschematronparserctxt]](anon0: NullablePointer[Xmldoc] tag)
use @xmlSchematronFreeParserCtxt[None](anon0: NullablePointer[Xmlschematronparserctxt])
use @xmlSchematronParse[NullablePointer[Xmlschematron]](anon0: NullablePointer[Xmlschematronparserctxt])
use @xmlSchematronFree[None](anon0: NullablePointer[Xmlschematron])
// Not Implemented Yet: use @xmlSchematronSetValidStructuredErrors[None](anon0: NullablePointer[Xmlschematronvalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlSchematronNewValidCtxt[NullablePointer[Xmlschematronvalidctxt]](anon0: NullablePointer[Xmlschematron], anon1: I32)
use @xmlSchematronFreeValidCtxt[None](anon0: NullablePointer[Xmlschematronvalidctxt])
use @xmlSchematronValidateDoc[I32](anon0: NullablePointer[Xmlschematronvalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlCreateURI[NullablePointer[Xmluri]]()
use @xmlBuildURI[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlBuildRelativeURI[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlParseURI[NullablePointer[Xmluri]](anon0: Pointer[U8] tag)
use @xmlParseURIRaw[NullablePointer[Xmluri]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlParseURIReference[I32](anon0: NullablePointer[Xmluri], anon1: Pointer[U8] tag)
use @xmlSaveUri[Pointer[U8]](anon0: NullablePointer[Xmluri])
use @xmlPrintURI[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmluri])
use @xmlURIEscapeStr[Pointer[U8]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlURIUnescapeString[Pointer[U8]](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag)
use @xmlNormalizeURIPath[I32](anon0: Pointer[U8] tag)
use @xmlURIEscape[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlFreeURI[None](anon0: NullablePointer[Xmluri])
use @xmlCanonicPath[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlPathToURI[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlXIncludeProcess[I32](anon0: NullablePointer[Xmldoc] tag)
use @xmlXIncludeProcessFlags[I32](anon0: NullablePointer[Xmldoc] tag, anon1: I32)
use @xmlXIncludeProcessFlagsData[I32](anon0: NullablePointer[Xmldoc] tag, anon1: I32, anon2: Pointer[U8])
use @xmlXIncludeProcessTreeFlagsData[I32](anon0: NullablePointer[Xmlnode], anon1: I32, anon2: Pointer[U8])
use @xmlXIncludeProcessTree[I32](anon0: NullablePointer[Xmlnode])
use @xmlXIncludeProcessTreeFlags[I32](anon0: NullablePointer[Xmlnode], anon1: I32)
use @xmlXIncludeNewContext[NullablePointer[Xmlxincludectxt]](anon0: NullablePointer[Xmldoc] tag)
use @xmlXIncludeSetFlags[I32](anon0: NullablePointer[Xmlxincludectxt], anon1: I32)
use @xmlXIncludeFreeContext[None](anon0: NullablePointer[Xmlxincludectxt])
use @xmlXIncludeProcessNode[I32](anon0: NullablePointer[Xmlxincludectxt], anon1: NullablePointer[Xmlnode])
use @xmlModuleOpen[NullablePointer[Xmlmodule]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlModuleSymbol[I32](anon0: NullablePointer[Xmlmodule], anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8]])
use @xmlModuleClose[I32](anon0: NullablePointer[Xmlmodule])
use @xmlModuleFree[I32](anon0: NullablePointer[Xmlmodule])
use @xmlSchemaNewParserCtxt[NullablePointer[Xmlschemaparserctxt]](anon0: Pointer[U8] tag)
use @xmlSchemaNewMemParserCtxt[NullablePointer[Xmlschemaparserctxt]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlSchemaNewDocParserCtxt[NullablePointer[Xmlschemaparserctxt]](anon0: NullablePointer[Xmldoc] tag)
use @xmlSchemaFreeParserCtxt[None](anon0: NullablePointer[Xmlschemaparserctxt])
// Not Implemented Yet: use @xmlSchemaSetParserErrors[None](anon0: NullablePointer[Xmlschemaparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8])
// Not Implemented Yet: use @xmlSchemaSetParserStructuredErrors[None](anon0: NullablePointer[Xmlschemaparserctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlSchemaGetParserErrors[I32](anon0: NullablePointer[Xmlschemaparserctxt], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[U8]])
use @xmlSchemaIsValid[I32](anon0: NullablePointer[Xmlschemavalidctxt])
use @xmlSchemaParse[NullablePointer[Xmlschema]](anon0: NullablePointer[Xmlschemaparserctxt])
use @xmlSchemaFree[None](anon0: NullablePointer[Xmlschema])
use @xmlSchemaDump[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlschema])
// Not Implemented Yet: use @xmlSchemaSetValidErrors[None](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8])
// Not Implemented Yet: use @xmlSchemaSetValidStructuredErrors[None](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlSchemaGetValidErrors[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[FUNCTIONPOINTER]], anon3: Pointer[Pointer[U8]])
use @xmlSchemaSetValidOptions[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: I32)
use @xmlSchemaValidateSetFilename[None](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[U8] tag)
use @xmlSchemaValidCtxtGetOptions[I32](anon0: NullablePointer[Xmlschemavalidctxt])
use @xmlSchemaNewValidCtxt[NullablePointer[Xmlschemavalidctxt]](anon0: NullablePointer[Xmlschema])
use @xmlSchemaFreeValidCtxt[None](anon0: NullablePointer[Xmlschemavalidctxt])
use @xmlSchemaValidateDoc[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlSchemaValidateOneElement[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: NullablePointer[Xmlnode])
use @xmlSchemaValidateStream[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: NullablePointer[Xmlparserinputbuffer], anon2: I32, anon3: NullablePointer[Xmlsaxhandler], anon4: Pointer[U8])
use @xmlSchemaValidateFile[I32](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[U8] tag, anon2: I32)
use @xmlSchemaValidCtxtGetParserCtxt[NullablePointer[Xmlparserctxt]](anon0: NullablePointer[Xmlschemavalidctxt])
use @xmlSchemaSAXPlug[NullablePointer[Xmlschemasaxplug]](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[NullablePointer[Xmlsaxhandler]], anon2: Pointer[Pointer[U8]])
use @xmlSchemaSAXUnplug[I32](anon0: NullablePointer[Xmlschemasaxplug])
// Not Implemented Yet: use @xmlSchemaValidateSetLocator[None](anon0: NullablePointer[Xmlschemavalidctxt], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlNewTextReader[NullablePointer[Xmltextreader]](anon0: NullablePointer[Xmlparserinputbuffer], anon1: Pointer[U8] tag)
use @xmlNewTextReaderFilename[NullablePointer[Xmltextreader]](anon0: Pointer[U8] tag)
use @xmlFreeTextReader[None](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderSetup[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmlparserinputbuffer], anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlTextReaderRead[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderReadInnerXml[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderReadOuterXml[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderReadString[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderReadAttributeValue[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderAttributeCount[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderDepth[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderHasAttributes[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderHasValue[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderIsDefault[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderIsEmptyElement[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderNodeType[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderQuoteChar[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderReadState[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderIsNamespaceDecl[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstBaseUri[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstLocalName[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstName[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstNamespaceUri[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstPrefix[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstXmlLang[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstString[Pointer[U8]](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderConstValue[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderBaseUri[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderLocalName[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderName[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderNamespaceUri[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderPrefix[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderXmlLang[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderValue[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderClose[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderGetAttributeNo[Pointer[U8]](anon0: NullablePointer[Xmltextreader], anon1: I32)
use @xmlTextReaderGetAttribute[Pointer[U8]](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderGetAttributeNs[Pointer[U8]](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextReaderGetRemainder[NullablePointer[Xmlparserinputbuffer]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderLookupNamespace[Pointer[U8]](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderMoveToAttributeNo[I32](anon0: NullablePointer[Xmltextreader], anon1: I32)
use @xmlTextReaderMoveToAttribute[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderMoveToAttributeNs[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextReaderMoveToFirstAttribute[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderMoveToNextAttribute[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderMoveToElement[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderNormalization[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderConstEncoding[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderSetParserProp[I32](anon0: NullablePointer[Xmltextreader], anon1: I32, anon2: I32)
use @xmlTextReaderGetParserProp[I32](anon0: NullablePointer[Xmltextreader], anon1: I32)
use @xmlTextReaderCurrentNode[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderGetParserLineNumber[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderGetParserColumnNumber[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderPreserve[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderPreservePattern[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: Pointer[Pointer[U8] tag])
use @xmlTextReaderCurrentDoc[NullablePointer[Xmldoc]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderExpand[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderNext[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderNextSibling[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderIsValid[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderRelaxNGValidate[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderRelaxNGValidateCtxt[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmlrelaxngvalidctxt], anon2: I32)
use @xmlTextReaderRelaxNGSetSchema[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmlrelaxng])
use @xmlTextReaderSchemaValidate[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag)
use @xmlTextReaderSchemaValidateCtxt[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmlschemavalidctxt], anon2: I32)
use @xmlTextReaderSetSchema[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmlschema])
use @xmlTextReaderConstXmlVersion[Pointer[U8]](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderStandalone[I32](anon0: NullablePointer[Xmltextreader])
use @xmlTextReaderByteConsumed[I64](anon0: NullablePointer[Xmltextreader])
use @xmlReaderWalker[NullablePointer[Xmltextreader]](anon0: NullablePointer[Xmldoc] tag)
use @xmlReaderForDoc[NullablePointer[Xmltextreader]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlReaderForFile[NullablePointer[Xmltextreader]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlReaderForMemory[NullablePointer[Xmltextreader]](anon0: Pointer[U8] tag, anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlReaderForFd[NullablePointer[Xmltextreader]](anon0: I32, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
// Not Implemented Yet: use @xmlReaderForIO[NullablePointer[Xmltextreader]](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @xmlReaderNewWalker[I32](anon0: NullablePointer[Xmltextreader], anon1: NullablePointer[Xmldoc] tag)
use @xmlReaderNewDoc[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
use @xmlReaderNewFile[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: I32)
use @xmlReaderNewMemory[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[U8] tag, anon2: I32, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: I32)
use @xmlReaderNewFd[I32](anon0: NullablePointer[Xmltextreader], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: I32)
// Not Implemented Yet: use @xmlReaderNewIO[I32](anon0: NullablePointer[Xmltextreader], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[FUNCTIONPOINTER], anon3: Pointer[U8], anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: I32)
use @xmlTextReaderLocatorLineNumber[I32](anon0: Pointer[U8])
use @xmlTextReaderLocatorBaseURI[Pointer[U8]](anon0: Pointer[U8])
// Not Implemented Yet: use @xmlTextReaderSetErrorHandler[None](anon0: NullablePointer[Xmltextreader], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlTextReaderSetStructuredErrorHandler[None](anon0: NullablePointer[Xmltextreader], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlTextReaderGetErrorHandler[None](anon0: NullablePointer[Xmltextreader], anon1: Pointer[Pointer[FUNCTIONPOINTER]], anon2: Pointer[Pointer[U8]])
use @xmlSaveToFd[NullablePointer[Xmlsavectxt]](anon0: I32, anon1: Pointer[U8] tag, anon2: I32)
use @xmlSaveToFilename[NullablePointer[Xmlsavectxt]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag, anon2: I32)
use @xmlSaveToBuffer[NullablePointer[Xmlsavectxt]](anon0: NullablePointer[Xmlbuffer], anon1: Pointer[U8] tag, anon2: I32)
// Not Implemented Yet: use @xmlSaveToIO[NullablePointer[Xmlsavectxt]](anon0: Pointer[FUNCTIONPOINTER], anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8], anon3: Pointer[U8] tag, anon4: I32)
use @xmlSaveDoc[I64](anon0: NullablePointer[Xmlsavectxt], anon1: NullablePointer[Xmldoc] tag)
use @xmlSaveTree[I64](anon0: NullablePointer[Xmlsavectxt], anon1: NullablePointer[Xmlnode])
use @xmlSaveFlush[I32](anon0: NullablePointer[Xmlsavectxt])
use @xmlSaveClose[I32](anon0: NullablePointer[Xmlsavectxt])
// Not Implemented Yet: use @xmlSaveSetEscape[I32](anon0: NullablePointer[Xmlsavectxt], anon1: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlSaveSetAttrEscape[I32](anon0: NullablePointer[Xmlsavectxt], anon1: Pointer[FUNCTIONPOINTER])
use @xmlSchemaInitTypes[None]()
use @xmlSchemaCleanupTypes[None]()
use @xmlSchemaGetPredefinedType[NullablePointer[Xmlschematype]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlSchemaValidatePredefinedType[I32](anon0: NullablePointer[Xmlschematype], anon1: Pointer[U8] tag, anon2: Pointer[NullablePointer[Xmlschemaval]])
use @xmlSchemaValPredefTypeNode[I32](anon0: NullablePointer[Xmlschematype], anon1: Pointer[U8] tag, anon2: Pointer[NullablePointer[Xmlschemaval]], anon3: NullablePointer[Xmlnode])
use @xmlSchemaValidateFacet[I32](anon0: NullablePointer[Xmlschematype], anon1: NullablePointer[Xmlschemafacet], anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlschemaval])
use @xmlSchemaValidateFacetWhtsp[I32](anon0: NullablePointer[Xmlschemafacet], anon1: I32, anon2: I32, anon3: Pointer[U8] tag, anon4: NullablePointer[Xmlschemaval], anon5: I32)
use @xmlSchemaFreeValue[None](anon0: NullablePointer[Xmlschemaval])
use @xmlSchemaNewFacet[NullablePointer[Xmlschemafacet]]()
use @xmlSchemaCheckFacet[I32](anon0: NullablePointer[Xmlschemafacet], anon1: NullablePointer[Xmlschematype], anon2: NullablePointer[Xmlschemaparserctxt], anon3: Pointer[U8] tag)
use @xmlSchemaFreeFacet[None](anon0: NullablePointer[Xmlschemafacet])
use @xmlSchemaCompareValues[I32](anon0: NullablePointer[Xmlschemaval], anon1: NullablePointer[Xmlschemaval])
use @xmlSchemaGetBuiltInListSimpleTypeItemType[NullablePointer[Xmlschematype]](anon0: NullablePointer[Xmlschematype])
use @xmlSchemaValidateListSimpleTypeFacet[I32](anon0: NullablePointer[Xmlschemafacet], anon1: Pointer[U8] tag, anon2: U64, anon3: Pointer[U64])
use @xmlSchemaGetBuiltInType[NullablePointer[Xmlschematype]](anon0: I32)
use @xmlSchemaIsBuiltInTypeFacet[I32](anon0: NullablePointer[Xmlschematype], anon1: I32)
use @xmlSchemaCollapseString[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlSchemaWhiteSpaceReplace[Pointer[U8]](anon0: Pointer[U8] tag)
use @xmlSchemaGetFacetValueAsULong[U64](anon0: NullablePointer[Xmlschemafacet])
use @xmlSchemaValidateLengthFacet[I32](anon0: NullablePointer[Xmlschematype], anon1: NullablePointer[Xmlschemafacet], anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlschemaval], anon4: Pointer[U64])
use @xmlSchemaValidateLengthFacetWhtsp[I32](anon0: NullablePointer[Xmlschemafacet], anon1: I32, anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlschemaval], anon4: Pointer[U64], anon5: I32)
use @xmlSchemaValPredefTypeNodeNoNorm[I32](anon0: NullablePointer[Xmlschematype], anon1: Pointer[U8] tag, anon2: Pointer[NullablePointer[Xmlschemaval]], anon3: NullablePointer[Xmlnode])
use @xmlSchemaGetCanonValue[I32](anon0: NullablePointer[Xmlschemaval], anon1: Pointer[Pointer[U8] tag])
use @xmlSchemaGetCanonValueWhtsp[I32](anon0: NullablePointer[Xmlschemaval], anon1: Pointer[Pointer[U8] tag], anon2: I32)
use @xmlSchemaValueAppend[I32](anon0: NullablePointer[Xmlschemaval], anon1: NullablePointer[Xmlschemaval])
use @xmlSchemaValueGetNext[NullablePointer[Xmlschemaval]](anon0: NullablePointer[Xmlschemaval])
use @xmlSchemaValueGetAsString[Pointer[U8]](anon0: NullablePointer[Xmlschemaval])
use @xmlSchemaValueGetAsBoolean[I32](anon0: NullablePointer[Xmlschemaval])
use @xmlSchemaNewStringValue[NullablePointer[Xmlschemaval]](anon0: I32, anon1: Pointer[U8] tag)
use @xmlSchemaNewNOTATIONValue[NullablePointer[Xmlschemaval]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlSchemaNewQNameValue[NullablePointer[Xmlschemaval]](anon0: Pointer[U8] tag, anon1: Pointer[U8] tag)
use @xmlSchemaCompareValuesWhtsp[I32](anon0: NullablePointer[Xmlschemaval], anon1: I32, anon2: NullablePointer[Xmlschemaval], anon3: I32)
use @xmlSchemaCopyValue[NullablePointer[Xmlschemaval]](anon0: NullablePointer[Xmlschemaval])
use @xmlSchemaGetValType[I32](anon0: NullablePointer[Xmlschemaval])
use @xmlUCSIsAegeanNumbers[I32](anon0: I32)
use @xmlUCSIsAlphabeticPresentationForms[I32](anon0: I32)
use @xmlUCSIsArabic[I32](anon0: I32)
use @xmlUCSIsArabicPresentationFormsA[I32](anon0: I32)
use @xmlUCSIsArabicPresentationFormsB[I32](anon0: I32)
use @xmlUCSIsArmenian[I32](anon0: I32)
use @xmlUCSIsArrows[I32](anon0: I32)
use @xmlUCSIsBasicLatin[I32](anon0: I32)
use @xmlUCSIsBengali[I32](anon0: I32)
use @xmlUCSIsBlockElements[I32](anon0: I32)
use @xmlUCSIsBopomofo[I32](anon0: I32)
use @xmlUCSIsBopomofoExtended[I32](anon0: I32)
use @xmlUCSIsBoxDrawing[I32](anon0: I32)
use @xmlUCSIsBraillePatterns[I32](anon0: I32)
use @xmlUCSIsBuhid[I32](anon0: I32)
use @xmlUCSIsByzantineMusicalSymbols[I32](anon0: I32)
use @xmlUCSIsCJKCompatibility[I32](anon0: I32)
use @xmlUCSIsCJKCompatibilityForms[I32](anon0: I32)
use @xmlUCSIsCJKCompatibilityIdeographs[I32](anon0: I32)
use @xmlUCSIsCJKCompatibilityIdeographsSupplement[I32](anon0: I32)
use @xmlUCSIsCJKRadicalsSupplement[I32](anon0: I32)
use @xmlUCSIsCJKSymbolsandPunctuation[I32](anon0: I32)
use @xmlUCSIsCJKUnifiedIdeographs[I32](anon0: I32)
use @xmlUCSIsCJKUnifiedIdeographsExtensionA[I32](anon0: I32)
use @xmlUCSIsCJKUnifiedIdeographsExtensionB[I32](anon0: I32)
use @xmlUCSIsCherokee[I32](anon0: I32)
use @xmlUCSIsCombiningDiacriticalMarks[I32](anon0: I32)
use @xmlUCSIsCombiningDiacriticalMarksforSymbols[I32](anon0: I32)
use @xmlUCSIsCombiningHalfMarks[I32](anon0: I32)
use @xmlUCSIsCombiningMarksforSymbols[I32](anon0: I32)
use @xmlUCSIsControlPictures[I32](anon0: I32)
use @xmlUCSIsCurrencySymbols[I32](anon0: I32)
use @xmlUCSIsCypriotSyllabary[I32](anon0: I32)
use @xmlUCSIsCyrillic[I32](anon0: I32)
use @xmlUCSIsCyrillicSupplement[I32](anon0: I32)
use @xmlUCSIsDeseret[I32](anon0: I32)
use @xmlUCSIsDevanagari[I32](anon0: I32)
use @xmlUCSIsDingbats[I32](anon0: I32)
use @xmlUCSIsEnclosedAlphanumerics[I32](anon0: I32)
use @xmlUCSIsEnclosedCJKLettersandMonths[I32](anon0: I32)
use @xmlUCSIsEthiopic[I32](anon0: I32)
use @xmlUCSIsGeneralPunctuation[I32](anon0: I32)
use @xmlUCSIsGeometricShapes[I32](anon0: I32)
use @xmlUCSIsGeorgian[I32](anon0: I32)
use @xmlUCSIsGothic[I32](anon0: I32)
use @xmlUCSIsGreek[I32](anon0: I32)
use @xmlUCSIsGreekExtended[I32](anon0: I32)
use @xmlUCSIsGreekandCoptic[I32](anon0: I32)
use @xmlUCSIsGujarati[I32](anon0: I32)
use @xmlUCSIsGurmukhi[I32](anon0: I32)
use @xmlUCSIsHalfwidthandFullwidthForms[I32](anon0: I32)
use @xmlUCSIsHangulCompatibilityJamo[I32](anon0: I32)
use @xmlUCSIsHangulJamo[I32](anon0: I32)
use @xmlUCSIsHangulSyllables[I32](anon0: I32)
use @xmlUCSIsHanunoo[I32](anon0: I32)
use @xmlUCSIsHebrew[I32](anon0: I32)
use @xmlUCSIsHighPrivateUseSurrogates[I32](anon0: I32)
use @xmlUCSIsHighSurrogates[I32](anon0: I32)
use @xmlUCSIsHiragana[I32](anon0: I32)
use @xmlUCSIsIPAExtensions[I32](anon0: I32)
use @xmlUCSIsIdeographicDescriptionCharacters[I32](anon0: I32)
use @xmlUCSIsKanbun[I32](anon0: I32)
use @xmlUCSIsKangxiRadicals[I32](anon0: I32)
use @xmlUCSIsKannada[I32](anon0: I32)
use @xmlUCSIsKatakana[I32](anon0: I32)
use @xmlUCSIsKatakanaPhoneticExtensions[I32](anon0: I32)
use @xmlUCSIsKhmer[I32](anon0: I32)
use @xmlUCSIsKhmerSymbols[I32](anon0: I32)
use @xmlUCSIsLao[I32](anon0: I32)
use @xmlUCSIsLatin1Supplement[I32](anon0: I32)
use @xmlUCSIsLatinExtendedA[I32](anon0: I32)
use @xmlUCSIsLatinExtendedB[I32](anon0: I32)
use @xmlUCSIsLatinExtendedAdditional[I32](anon0: I32)
use @xmlUCSIsLetterlikeSymbols[I32](anon0: I32)
use @xmlUCSIsLimbu[I32](anon0: I32)
use @xmlUCSIsLinearBIdeograms[I32](anon0: I32)
use @xmlUCSIsLinearBSyllabary[I32](anon0: I32)
use @xmlUCSIsLowSurrogates[I32](anon0: I32)
use @xmlUCSIsMalayalam[I32](anon0: I32)
use @xmlUCSIsMathematicalAlphanumericSymbols[I32](anon0: I32)
use @xmlUCSIsMathematicalOperators[I32](anon0: I32)
use @xmlUCSIsMiscellaneousMathematicalSymbolsA[I32](anon0: I32)
use @xmlUCSIsMiscellaneousMathematicalSymbolsB[I32](anon0: I32)
use @xmlUCSIsMiscellaneousSymbols[I32](anon0: I32)
use @xmlUCSIsMiscellaneousSymbolsandArrows[I32](anon0: I32)
use @xmlUCSIsMiscellaneousTechnical[I32](anon0: I32)
use @xmlUCSIsMongolian[I32](anon0: I32)
use @xmlUCSIsMusicalSymbols[I32](anon0: I32)
use @xmlUCSIsMyanmar[I32](anon0: I32)
use @xmlUCSIsNumberForms[I32](anon0: I32)
use @xmlUCSIsOgham[I32](anon0: I32)
use @xmlUCSIsOldItalic[I32](anon0: I32)
use @xmlUCSIsOpticalCharacterRecognition[I32](anon0: I32)
use @xmlUCSIsOriya[I32](anon0: I32)
use @xmlUCSIsOsmanya[I32](anon0: I32)
use @xmlUCSIsPhoneticExtensions[I32](anon0: I32)
use @xmlUCSIsPrivateUse[I32](anon0: I32)
use @xmlUCSIsPrivateUseArea[I32](anon0: I32)
use @xmlUCSIsRunic[I32](anon0: I32)
use @xmlUCSIsShavian[I32](anon0: I32)
use @xmlUCSIsSinhala[I32](anon0: I32)
use @xmlUCSIsSmallFormVariants[I32](anon0: I32)
use @xmlUCSIsSpacingModifierLetters[I32](anon0: I32)
use @xmlUCSIsSpecials[I32](anon0: I32)
use @xmlUCSIsSuperscriptsandSubscripts[I32](anon0: I32)
use @xmlUCSIsSupplementalArrowsA[I32](anon0: I32)
use @xmlUCSIsSupplementalArrowsB[I32](anon0: I32)
use @xmlUCSIsSupplementalMathematicalOperators[I32](anon0: I32)
use @xmlUCSIsSupplementaryPrivateUseAreaA[I32](anon0: I32)
use @xmlUCSIsSupplementaryPrivateUseAreaB[I32](anon0: I32)
use @xmlUCSIsSyriac[I32](anon0: I32)
use @xmlUCSIsTagalog[I32](anon0: I32)
use @xmlUCSIsTagbanwa[I32](anon0: I32)
use @xmlUCSIsTags[I32](anon0: I32)
use @xmlUCSIsTaiLe[I32](anon0: I32)
use @xmlUCSIsTaiXuanJingSymbols[I32](anon0: I32)
use @xmlUCSIsTamil[I32](anon0: I32)
use @xmlUCSIsTelugu[I32](anon0: I32)
use @xmlUCSIsThaana[I32](anon0: I32)
use @xmlUCSIsThai[I32](anon0: I32)
use @xmlUCSIsTibetan[I32](anon0: I32)
use @xmlUCSIsUgaritic[I32](anon0: I32)
use @xmlUCSIsUnifiedCanadianAboriginalSyllabics[I32](anon0: I32)
use @xmlUCSIsVariationSelectors[I32](anon0: I32)
use @xmlUCSIsVariationSelectorsSupplement[I32](anon0: I32)
use @xmlUCSIsYiRadicals[I32](anon0: I32)
use @xmlUCSIsYiSyllables[I32](anon0: I32)
use @xmlUCSIsYijingHexagramSymbols[I32](anon0: I32)
use @xmlUCSIsBlock[I32](anon0: I32, anon1: Pointer[U8] tag)
use @xmlUCSIsCatC[I32](anon0: I32)
use @xmlUCSIsCatCc[I32](anon0: I32)
use @xmlUCSIsCatCf[I32](anon0: I32)
use @xmlUCSIsCatCo[I32](anon0: I32)
use @xmlUCSIsCatCs[I32](anon0: I32)
use @xmlUCSIsCatL[I32](anon0: I32)
use @xmlUCSIsCatLl[I32](anon0: I32)
use @xmlUCSIsCatLm[I32](anon0: I32)
use @xmlUCSIsCatLo[I32](anon0: I32)
use @xmlUCSIsCatLt[I32](anon0: I32)
use @xmlUCSIsCatLu[I32](anon0: I32)
use @xmlUCSIsCatM[I32](anon0: I32)
use @xmlUCSIsCatMc[I32](anon0: I32)
use @xmlUCSIsCatMe[I32](anon0: I32)
use @xmlUCSIsCatMn[I32](anon0: I32)
use @xmlUCSIsCatN[I32](anon0: I32)
use @xmlUCSIsCatNd[I32](anon0: I32)
use @xmlUCSIsCatNl[I32](anon0: I32)
use @xmlUCSIsCatNo[I32](anon0: I32)
use @xmlUCSIsCatP[I32](anon0: I32)
use @xmlUCSIsCatPc[I32](anon0: I32)
use @xmlUCSIsCatPd[I32](anon0: I32)
use @xmlUCSIsCatPe[I32](anon0: I32)
use @xmlUCSIsCatPf[I32](anon0: I32)
use @xmlUCSIsCatPi[I32](anon0: I32)
use @xmlUCSIsCatPo[I32](anon0: I32)
use @xmlUCSIsCatPs[I32](anon0: I32)
use @xmlUCSIsCatS[I32](anon0: I32)
use @xmlUCSIsCatSc[I32](anon0: I32)
use @xmlUCSIsCatSk[I32](anon0: I32)
use @xmlUCSIsCatSm[I32](anon0: I32)
use @xmlUCSIsCatSo[I32](anon0: I32)
use @xmlUCSIsCatZ[I32](anon0: I32)
use @xmlUCSIsCatZl[I32](anon0: I32)
use @xmlUCSIsCatZp[I32](anon0: I32)
use @xmlUCSIsCatZs[I32](anon0: I32)
use @xmlUCSIsCat[I32](anon0: I32, anon1: Pointer[U8] tag)
use @xmlNewTextWriter[NullablePointer[Xmltextwriter]](anon0: NullablePointer[Xmloutputbuffer])
use @xmlNewTextWriterFilename[NullablePointer[Xmltextwriter]](anon0: Pointer[U8] tag, anon1: I32)
use @xmlNewTextWriterMemory[NullablePointer[Xmltextwriter]](anon0: NullablePointer[Xmlbuffer], anon1: I32)
use @xmlNewTextWriterPushParser[NullablePointer[Xmltextwriter]](anon0: NullablePointer[Xmlparserctxt], anon1: I32)
use @xmlNewTextWriterDoc[NullablePointer[Xmltextwriter]](anon0: Pointer[NullablePointer[Xmldoc] tag], anon1: I32)
use @xmlNewTextWriterTree[NullablePointer[Xmltextwriter]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: I32)
use @xmlFreeTextWriter[None](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterStartDocument[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterEndDocument[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterStartComment[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterEndComment[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatComment[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatComment[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: NullablePointer[VaListTag])
use @xmlTextWriterWriteComment[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterStartElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterStartElementNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterEndElement[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterFullEndElement[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlTextWriterWriteElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteFormatElementNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatElementNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: NullablePointer[VaListTag])
use @xmlTextWriterWriteElementNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterWriteFormatRaw[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatRaw[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: NullablePointer[VaListTag])
use @xmlTextWriterWriteRawLen[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: I32)
use @xmlTextWriterWriteRaw[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteFormatString[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatString[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: NullablePointer[VaListTag])
use @xmlTextWriterWriteString[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteBase64[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
use @xmlTextWriterWriteBinHex[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
use @xmlTextWriterStartAttribute[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterStartAttributeNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterEndAttribute[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatAttribute[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatAttribute[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlTextWriterWriteAttribute[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteFormatAttributeNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatAttributeNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: NullablePointer[VaListTag])
use @xmlTextWriterWriteAttributeNS[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterStartPI[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterEndPI[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatPI[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatPI[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlTextWriterWritePI[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterStartCDATA[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterEndCDATA[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatCDATA[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatCDATA[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: NullablePointer[VaListTag])
use @xmlTextWriterWriteCDATA[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterStartDTD[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterEndDTD[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatDTD[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatDTD[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: NullablePointer[VaListTag])
use @xmlTextWriterWriteDTD[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag)
use @xmlTextWriterStartDTDElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterEndDTDElement[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatDTDElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatDTDElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlTextWriterWriteDTDElement[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterStartDTDAttlist[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterEndDTDAttlist[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatDTDAttlist[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatDTDAttlist[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[VaListTag])
use @xmlTextWriterWriteDTDAttlist[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlTextWriterStartDTDEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag)
use @xmlTextWriterEndDTDEntity[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlTextWriterWriteFormatDTDInternalEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterWriteVFormatDTDInternalEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: NullablePointer[VaListTag])
use @xmlTextWriterWriteDTDInternalEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterWriteDTDExternalEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag)
use @xmlTextWriterWriteDTDExternalEntityContents[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterWriteDTDEntity[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag, anon4: Pointer[U8] tag, anon5: Pointer[U8] tag, anon6: Pointer[U8] tag)
use @xmlTextWriterWriteDTDNotation[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[U8] tag)
use @xmlTextWriterSetIndent[I32](anon0: NullablePointer[Xmltextwriter], anon1: I32)
use @xmlTextWriterSetIndentString[I32](anon0: NullablePointer[Xmltextwriter], anon1: Pointer[U8] tag)
use @xmlTextWriterSetQuoteChar[I32](anon0: NullablePointer[Xmltextwriter], anon1: U8)
use @xmlTextWriterFlush[I32](anon0: NullablePointer[Xmltextwriter])
use @xmlXPathPopBoolean[I32](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathPopNumber[F64](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathPopString[Pointer[U8]](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathPopNodeSet[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathPopExternal[Pointer[U8]](anon0: NullablePointer[Xmlxpathparsercontext])
// Not Implemented Yet: use @xmlXPathRegisterVariableLookup[None](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
// Not Implemented Yet: use @xmlXPathRegisterFuncLookup[None](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[FUNCTIONPOINTER], anon2: Pointer[U8])
use @xmlXPatherror[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: Pointer[U8] tag, anon2: I32, anon3: I32)
use @xmlXPathErr[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathDebugDumpObject[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlxpathobject], anon2: I32)
use @xmlXPathDebugDumpCompExpr[None](anon0: NullablePointer[IoFile], anon1: NullablePointer[Xmlxpathcompexpr], anon2: I32)
use @xmlXPathNodeSetContains[I32](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathDifference[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathIntersection[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathDistinctSorted[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathDistinct[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathHasSameNodes[I32](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathNodeLeadingSorted[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathLeadingSorted[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathNodeLeading[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathLeading[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathNodeTrailingSorted[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathTrailingSorted[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathNodeTrailing[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathTrailing[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathRegisterNs[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlXPathNsLookup[Pointer[U8]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag)
use @xmlXPathRegisteredNsCleanup[None](anon0: NullablePointer[Xmlxpathcontext] tag)
// Not Implemented Yet: use @xmlXPathRegisterFunc[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[FUNCTIONPOINTER])
// Not Implemented Yet: use @xmlXPathRegisterFuncNS[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: Pointer[FUNCTIONPOINTER])
use @xmlXPathRegisterVariable[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: NullablePointer[Xmlxpathobject])
use @xmlXPathRegisterVariableNS[I32](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag, anon3: NullablePointer[Xmlxpathobject])
// Not Implemented Yet: use @xmlXPathFunctionLookup[Pointer[FUNCTIONPOINTER]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag)
// Not Implemented Yet: use @xmlXPathFunctionLookupNS[Pointer[FUNCTIONPOINTER]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlXPathRegisteredFuncsCleanup[None](anon0: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathVariableLookup[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag)
use @xmlXPathVariableLookupNS[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathcontext] tag, anon1: Pointer[U8] tag, anon2: Pointer[U8] tag)
use @xmlXPathRegisteredVariablesCleanup[None](anon0: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathNewParserContext[NullablePointer[Xmlxpathparsercontext]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathFreeParserContext[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @valuePop[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathparsercontext])
use @valuePush[I32](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPathNewString[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag)
use @xmlXPathNewCString[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag)
use @xmlXPathWrapString[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag)
use @xmlXPathWrapCString[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag)
use @xmlXPathNewFloat[NullablePointer[Xmlxpathobject]](anon0: F64)
use @xmlXPathNewBoolean[NullablePointer[Xmlxpathobject]](anon0: I32)
use @xmlXPathNewNodeSet[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode])
use @xmlXPathNewValueTree[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode])
use @xmlXPathNodeSetAdd[I32](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathNodeSetAddUnique[I32](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathNodeSetAddNs[I32](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode], anon2: NullablePointer[Xmlns])
use @xmlXPathNodeSetSort[None](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathRoot[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathEvalExpr[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathParseName[Pointer[U8]](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathParseNCName[Pointer[U8]](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathStringEvalNumber[F64](anon0: Pointer[U8] tag)
use @xmlXPathEvaluatePredicateResult[I32](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPathRegisterAllFunctions[None](anon0: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPathNodeSetMerge[NullablePointer[Xmlnodeset]](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnodeset])
use @xmlXPathNodeSetDel[None](anon0: NullablePointer[Xmlnodeset], anon1: NullablePointer[Xmlnode])
use @xmlXPathNodeSetRemove[None](anon0: NullablePointer[Xmlnodeset], anon1: I32)
use @xmlXPathNewNodeSetList[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathWrapNodeSet[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPathWrapExternal[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8])
use @xmlXPathEqualValues[I32](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathNotEqualValues[I32](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathCompareValues[I32](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32, anon2: I32)
use @xmlXPathValueFlipSign[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathAddValues[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathSubValues[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathMultValues[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathDivValues[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathModValues[None](anon0: NullablePointer[Xmlxpathparsercontext])
use @xmlXPathIsNodeType[I32](anon0: Pointer[U8] tag)
use @xmlXPathNextSelf[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextChild[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextDescendant[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextDescendantOrSelf[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextParent[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextAncestorOrSelf[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextFollowingSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextFollowing[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextNamespace[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextAttribute[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextPreceding[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextAncestor[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathNextPrecedingSibling[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathparsercontext], anon1: NullablePointer[Xmlnode])
use @xmlXPathLastFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathPositionFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathCountFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathIdFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathLocalNameFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathNamespaceURIFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathStringFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathStringLengthFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathConcatFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathContainsFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathStartsWithFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathSubstringFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathSubstringBeforeFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathSubstringAfterFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathNormalizeFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathTranslateFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathNotFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathTrueFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathFalseFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathLangFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathNumberFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathSumFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathFloorFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathCeilingFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathRoundFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathBooleanFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPathNodeSetFreeNs[None](anon0: NullablePointer[Xmlns])
use @xmlXPtrLocationSetCreate[NullablePointer[Xmllocationset]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPtrFreeLocationSet[None](anon0: NullablePointer[Xmllocationset])
use @xmlXPtrLocationSetMerge[NullablePointer[Xmllocationset]](anon0: NullablePointer[Xmllocationset], anon1: NullablePointer[Xmllocationset])
use @xmlXPtrNewRange[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: I32, anon2: NullablePointer[Xmlnode], anon3: I32)
use @xmlXPtrNewRangePoints[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPtrNewRangeNodePoint[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPtrNewRangePointNode[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlxpathobject], anon1: NullablePointer[Xmlnode])
use @xmlXPtrNewRangeNodes[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlXPtrNewLocationSetNodes[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlnode])
use @xmlXPtrNewLocationSetNodeSet[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnodeset])
use @xmlXPtrNewRangeNodeObject[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPtrNewCollapsedRange[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmlnode])
use @xmlXPtrLocationSetAdd[None](anon0: NullablePointer[Xmllocationset], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPtrWrapLocationSet[NullablePointer[Xmlxpathobject]](anon0: NullablePointer[Xmllocationset])
use @xmlXPtrLocationSetDel[None](anon0: NullablePointer[Xmllocationset], anon1: NullablePointer[Xmlxpathobject])
use @xmlXPtrLocationSetRemove[None](anon0: NullablePointer[Xmllocationset], anon1: I32)
use @xmlXPtrNewContext[NullablePointer[Xmlxpathcontext]](anon0: NullablePointer[Xmldoc] tag, anon1: NullablePointer[Xmlnode], anon2: NullablePointer[Xmlnode])
use @xmlXPtrEval[NullablePointer[Xmlxpathobject]](anon0: Pointer[U8] tag, anon1: NullablePointer[Xmlxpathcontext] tag)
use @xmlXPtrRangeToFunction[None](anon0: NullablePointer[Xmlxpathparsercontext], anon1: I32)
use @xmlXPtrBuildNodeList[NullablePointer[Xmlnode]](anon0: NullablePointer[Xmlxpathobject])
use @xmlXPtrEvalRangePredicate[None](anon0: NullablePointer[Xmlxpathparsercontext])
