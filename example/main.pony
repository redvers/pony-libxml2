use "pony-libxml2"
use "lib:xml2"
use "debug"

actor Main
  new create(env: Env) =>
    env.out.print("oof")
    try
//      @xmlInitParser[None]()
      let docptr: XmldocPTR = LibXML2.xmlParseFile("pony-libxml2/libxml2.xml")
      if (docptr.is_none()) then env.out.print("Apparently bad xmlnodesetptr"); error end // Works!
      let ctxptr: XmlxpathcontextPTR = LibXML2.xmlXPathNewContext(docptr)
      if (ctxptr.is_none()) then env.out.print("Apparently bad xmlnodesetptr"); error end // Works!
      let xpathexptr: XmlxpathobjectPTR = LibXML2.xmlXPathEvalExpression("//Function", ctxptr)
      if (xpathexptr.is_none()) then env.out.print("Apparently bad xmlnodesetptr"); error end // Works!

      let xpathexp: Xmlxpathobject = xpathexptr.apply()?
      let xmlnodesetptr: XmlnodesetPTR = xpathexp.pnodesetval
      if (xmlnodesetptr.is_none()) then env.out.print("Apparently bad xmlnodesetptr"); error end // Works!

      let xmlnodeset: Xmlnodeset = xmlnodesetptr.apply()?
      var nodecount: I32 val = xmlnodeset.pnodeNr
      var nodemax: I32 val = xmlnodeset.pnodeMax
      env.out.print("pnodeNr:  " + nodecount.string())
      env.out.print("pnodeMax: " + nodemax.string())

      var nodearray: Array[XmlnodePTR] = Array[XmlnodePTR].from_cpointer(xmlnodeset.pnodeTab, nodecount.usize())

      for element in nodearray.values() do
        let xmlnode: Xmlnode = element.apply()?

        let path: String val = LibXML2.xmlGetNodePath(element)
        let name: String val = LibXML2.xmlGetProp(element, "name")
        env.out.print(path + ": " + name)
      end
    end

// These are not autogenerated yet
// (They're also not needed obviously)
type XmldocPTR is NullablePointer[Xmldoc]
type XmlnodesetPTR is NullablePointer[Xmlnodeset]
type XmlxpathcontextPTR is NullablePointer[Xmlxpathcontext]
type XmlxpathobjectPTR is NullablePointer[Xmlxpathobject]
type XmlnodePTR is NullablePointer[Xmlnode]

